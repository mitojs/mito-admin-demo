// 1:
export enum ErrorDataType {
  vue = 1,
  react = 2,
  js = 3,
  mini = 4,
}
export function getErrorDataType(num: number) {
  switch (num) {
    case ErrorDataType.vue:
      return 'vue'
    case ErrorDataType.react:
      return 'react'
    case ErrorDataType.js:
      return 'js'
    case ErrorDataType.mini:
      return 'mini'
    default:
      return 'else type'
  }
}
export const chartDataMap = new Map()
chartDataMap.set(ErrorDataType.vue, [
  { count: 3, date: '2020-12-25' },
  { count: 0, date: '2020-12-26' },
  { count: 3, date: '2020-12-27' },
  { count: 2, date: '2020-12-28' },
])
chartDataMap.set(ErrorDataType.js, [
  { count: 1, date: '2020-12-16' },
  { count: 2, date: '2020-12-17' },
  { count: 6, date: '2020-12-18' },
  { count: 5, date: '2020-12-19' },
  { count: 4, date: '2020-12-20' },
  { count: 9, date: '2020-12-21' },
  { count: 5, date: '2020-12-22' },
  { count: 17, date: '2020-12-23' },
  { count: 20, date: '2020-12-24' },
  { count: 10, date: '2020-12-25' },
  { count: 6, date: '2020-12-26' },
  { count: 6, date: '2020-12-27' },
  { count: 11, date: '2020-12-28' },
  { count: 7, date: '2020-12-29' },
  { count: 5, date: '2020-12-30' },
  { count: 12, date: '2020-12-31' },
  { count: 4, date: '2021-01-01' },
  { count: 1, date: '2021-01-02' },
  { count: 6, date: '2021-01-03' },
  { count: 16, date: '2021-01-04' },
  { count: 12, date: '2021-01-05' },
  { count: 16, date: '2021-01-06' },
  { count: 13, date: '2021-01-07' },
  { count: 9, date: '2021-01-08' },
  { count: 6, date: '2021-01-09' },
  { count: 2, date: '2021-01-10' },
  { count: 15, date: '2021-01-11' },
  { count: 18, date: '2021-01-12' },
  { count: 12, date: '2021-01-13' },
  { count: 12, date: '2021-01-14' },
  { count: 25, date: '2021-01-15' },
  { count: 6, date: '2021-01-16' },
  { count: 14, date: '2021-01-17' },
  { count: 17, date: '2021-01-18' },
  { count: 15, date: '2021-01-19' },
  { count: 11, date: '2021-01-20' },
  { count: 24, date: '2021-01-21' },
])
chartDataMap.set(ErrorDataType.react, [
  { count: 4, date: '2021-01-12' },
  { count: 0, date: '2021-01-13' },
  { count: 0, date: '2021-01-14' },
  { count: 0, date: '2021-01-15' },
  { count: 0, date: '2021-01-16' },
  { count: 0, date: '2021-01-17' },
  { count: 1, date: '2021-01-18' },
])
chartDataMap.set(ErrorDataType.mini, [
  { count: 2, date: '2020-11-25' },
  { count: 8, date: '2020-11-26' },
  { count: 8, date: '2020-11-27' },
  { count: 0, date: '2020-11-28' },
  { count: 0, date: '2020-11-29' },
  { count: 12, date: '2020-11-30' },
  { count: 3, date: '2020-12-01' },
  { count: 8, date: '2020-12-02' },
  { count: 5, date: '2020-12-03' },
  { count: 5, date: '2020-12-04' },
  { count: 0, date: '2020-12-05' },
  { count: 1, date: '2020-12-06' },
  { count: 2, date: '2020-12-07' },
  { count: 11, date: '2020-12-08' },
  { count: 0, date: '2020-12-09' },
  { count: 3, date: '2020-12-10' },
  { count: 1, date: '2020-12-11' },
  { count: 0, date: '2020-12-12' },
  { count: 0, date: '2020-12-13' },
  { count: 0, date: '2020-12-14' },
  { count: 0, date: '2020-12-15' },
  { count: 0, date: '2020-12-16' },
  { count: 0, date: '2020-12-17' },
  { count: 36, date: '2020-12-18' },
  { count: 3, date: '2020-12-19' },
  { count: 0, date: '2020-12-20' },
  { count: 6, date: '2020-12-21' },
  { count: 3, date: '2020-12-22' },
  { count: 17, date: '2020-12-23' },
  { count: 3, date: '2020-12-24' },
  { count: 5, date: '2020-12-25' },
  { count: 0, date: '2020-12-26' },
  { count: 0, date: '2020-12-27' },
  { count: 1, date: '2020-12-28' },
  { count: 7, date: '2020-12-29' },
  { count: 1, date: '2020-12-30' },
  { count: 1, date: '2020-12-31' },
  { count: 0, date: '2021-01-01' },
  { count: 0, date: '2021-01-02' },
  { count: 0, date: '2021-01-03' },
  { count: 2, date: '2021-01-04' },
  { count: 1, date: '2021-01-05' },
  { count: 1, date: '2021-01-06' },
  { count: 4, date: '2021-01-07' },
  { count: 5, date: '2021-01-08' },
  { count: 1, date: '2021-01-09' },
  { count: 1, date: '2021-01-10' },
  { count: 3, date: '2021-01-11' },
  { count: 1, date: '2021-01-12' },
  { count: 2, date: '2021-01-13' },
  { count: 2, date: '2021-01-14' },
  { count: 0, date: '2021-01-15' },
  { count: 0, date: '2021-01-16' },
  { count: 0, date: '2021-01-17' },
  { count: 0, date: '2021-01-18' },
  { count: 0, date: '2021-01-19' },
  { count: 0, date: '2021-01-20' },
  { count: 3, date: '2021-01-21' },
])

export const eventInfoMap = new Map()
eventInfoMap.set(ErrorDataType.react, {
  projectId: '14',
  apikey: 'b88dc680-4400-11eb-b709-751c094d80b8',
  browser: 'Chrome',
  browserVersion: '87.0.4280.141',
  device: '',
  engine: 'Blink',
  ip: '39.170.19.244',
  isp: '移动',
  level: 'normal',
  location: '中国 浙江省 杭州市',
  os: 'Mac OS',
  osVersion: '10.14.6',
  record: '[]',
  request: 'null',
  response: 'null',
  sdkVersion: '1.2.2',
  sdkName: '@zyf2e/mitojs',
  customTag: 'null',
  cookies: '{"user_token":"C480B1F19AB94DF381B05AB2657B4C6E"}',
  stack:
    '[{"url":"https://test.com/js/Errors~collect.164f89a3.chunk.js","func":"UNKNOWN_FUNCTION","args":[],"line":1,"column":5988}]',
  eventId: '43131',
  breadcrumb: [
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://test.com/#/errors',
        time: 1610950227914,
        elapsedTime: 216,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: { httpType: 'xhr', method: 'GET', url: 'https://test-end.com/project/list', data: '{}' },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1610950227914,
    },
    {
      type: 'Console',
      category: 'debug',
      data: { args: ['sls:', ''], level: 'log' },
      level: 'info',
      time: 1610950227985,
    },
    {
      type: 'Code Error',
      category: 'exception',
      data: {
        url: 'https://test.com/#/errors',
        name: 'UNKNOWN',
        message: 'ResizeObserver loop limit exceeded',
        level: 'normal',
        time: 1610950228010,
        stack: [
          {
            url: 'https://test.com/#/errors',
            func: 'UNKNOWN_FUNCTION',
            args: 'UNKNOWN',
            line: 0,
            col: 0,
          },
        ],
        type: 'JAVASCRIPT_ERROR',
      },
      level: 'error',
      time: 1610950228010,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://test.com/#/errors',
        time: 1610950228013,
        elapsedTime: 315,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url: 'https://test-end.com/events/errorId/1457929768',
          data: '{}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1610950228013,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://test.com/#/errors',
        time: 1610950228053,
        elapsedTime: 58,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url: 'https://test-end.com/project_tag/label?startDate=2020-12-18&endDate=2021-01-18&projectId=0',
          data: '{}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1610950228053,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://test.com/#/errors',
        time: 1610950228274,
        elapsedTime: 278,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url: 'https://test-end.com/errors/chart/project?startDate=2020-12-18&endDate=2021-01-18&projectId=0',
          data: '{}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1610950228274,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://test.com/#/errors',
        time: 1610950228318,
        elapsedTime: 323,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url: 'https://test-end.com/errors/statistics?startDate=2020-12-18&endDate=2021-01-18&projectId=0',
          data: '{}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1610950228318,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://test.com/#/errors',
        time: 1610950228638,
        elapsedTime: 292,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url:
            'https://test-end.com/errors/table?startDate=2020-12-18&endDate=2021-01-18&projectId=0&slsQuery=&pageSize=5&pageNum=1',
          data: '{}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1610950228638,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<input class="ant-checkbox-input"></input>',
      level: 'info',
      time: 1610950251117,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<input class="ant-checkbox-input"></input>',
      level: 'info',
      time: 1610950253192,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<button class="ant-btn ant-tooltip-open">忽视</button>',
      level: 'info',
      time: 1610950257040,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://test.com/#/errors',
        time: 1610950257161,
        elapsedTime: 113,
        level: 'low',
        message: 'ok',
        name: 'xhr--PUT',
        request: {
          httpType: 'xhr',
          method: 'PUT',
          url: 'https://test-end.com/errors/status',
          data: '{"errorIds":[-1815624468,1593537143,-245002191],"status":4}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1610950257161,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://test.com/#/errors',
        time: 1610950257655,
        elapsedTime: 237,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url:
            'https://test-end.com/errors/table?startDate=2020-12-18&endDate=2021-01-18&projectId=0&slsQuery=&pageSize=5&pageNum=1',
          data: '{}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1610950257655,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<input class="ant-checkbox-input"></input>',
      level: 'info',
      time: 1610950265861,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<input class="ant-checkbox-input"></input>',
      level: 'info',
      time: 1610950267993,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<li class="ant-pagination-item ant-pagination-item-2">2</li>',
      level: 'info',
      time: 1610950274493,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://test.com/#/errors',
        time: 1610950275374,
        elapsedTime: 533,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url:
            'https://test-end.com/errors/table?startDate=2020-12-18&endDate=2021-01-18&projectId=0&slsQuery=&pageSize=5&pageNum=2&status=',
          data: '{}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1610950275374,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<input class="ant-checkbox-input"></input>',
      level: 'info',
      time: 1610950280216,
    },
    { type: 'Console', category: 'debug', data: { args: [{}], level: 'error' }, level: 'error', time: 1610950280246 },
    {
      type: 'Code Error',
      category: 'exception',
      data: {
        time: 1610950280248,
        url: 'https://test.com/#/errors',
        name: 'TypeError',
        level: 'normal',
        message: "Cannot read property 'status' of undefined",
        stack: [
          {
            url: 'https://test.com/js/Errors~collect.164f89a3.chunk.js',
            func: 'UNKNOWN_FUNCTION',
            args: [],
            line: 1,
            column: 5988,
          },
        ],
        type: 'JAVASCRIPT_ERROR',
        errorId: -1811448882,
      },
      level: 'error',
      time: 1610950280249,
    },
  ],
  trackerId: 'fb9d9be0-5953-11eb-8525-e55bab7a8449',
  type: 'JAVASCRIPT_ERROR',
  ua:
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36',
  url: 'https://test.com/#/errors',
  projectId_0: '14',
  errorId: '-1811448882',
  elapsedTime: 'null',
  time: '1610950280248',
  teamId: '1',
  userId: '',
  date: '2021-01-18 14:12:00',
  __source__: '',
  __time__: '1603297060',
})

eventInfoMap.set(ErrorDataType.vue, {
  projectId: '1',
  apikey: '79dd5300-2f02-11eb-85bd-77170d98d921',
  eventId: '92040578',
  trackerId: '7e9738f0-e3a9-11eb-9c0a-939b8b4ae35f',
  errorId: '264174268',
  time: '1626160291693',
  message: 'http请求失败，失败原因：超时 https://a.test.com/api/get_advisory_info',
  browser: 'WeChat',
  browserVersion: '8.0.7.1920',
  device: 'Huawei',
  engine: 'Blink',
  ip: '181.100.11.99',
  isp: '电信',
  level: 'low',
  location: '中国 江西省 南昌市',
  os: 'Android',
  osVersion: '9',
  customTag: 'null',
  type: 'HTTP_ERROR',
  url: 'https://a.test.com/#/binding-doctors',
  record: 'null',
  request: 'null',
  response: '{"status":0,"data":""}',
  sdkVersion: '2.1.13',
  sdkName: 'mitojs',
  cookies: '{"TRYCATCH_TOKEN":"7e9738f0-e3a9-11eb-9c0a-939b8b4ae35f"}',
  stack: '[]',
  breadcrumb: [
    { type: 'Customer', category: 'debug', data: 'STATS-INITED-MITO', level: 'error', time: 1626160268294 },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://a.test.com/#/binding-doctors',
        time: 1626160268616,
        elapsedTime: 165,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          traceId: '8426e74b-669e-40f0-b434-00db5b321878',
          method: 'GET',
          url:
            'https://gw.test.com/api/medicsale_patient/1.0/share_config?url=https:%2F%2Fa.test.com%2F%23%2Fbinding-doctors',
          data: '',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1626160268616,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://a.test.com/#/binding-doctors',
        time: 1626160268701,
        elapsedTime: 2317,
        level: 'low',
        message: 'ok',
        name: 'xhr--POST',
        request: {
          httpType: 'xhr',
          traceId: '746f5587-c32f-48c2-8528-6977efb377d6',
          method: 'POST',
          url: 'https://gw.test.com/api/medicsale/1.0/prescription_doctor_list',
          data: '{"pageNo":null,"pageSize":null,"sort":0}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1626160268701,
    },
    {
      type: 'Console',
      category: 'debug',
      data: { args: ['WeixinJSBridge exec time', 25], level: 'log' },
      level: 'info',
      time: 1626160268749,
    },
    {
      type: 'Console',
      category: 'debug',
      data: { args: ['mito record start'], level: 'log' },
      level: 'info',
      time: 1626160269755,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data:
        '<button class="card-btn van-button van-button--primary van-button--normal van-button--plain van-button--text">立即咨询</button>',
      level: 'info',
      time: 1626160277948,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://a.test.com/#/binding-doctors',
        time: 1626160278009,
        elapsedTime: 10153,
        level: 'low',
        message: 'http请求失败，失败原因：超时 https://gw.test.com/api/medicsale/4.0/get_advisory_info',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          traceId: '8f9b0c47-13d2-409e-b8bd-899b4a4363c8',
          method: 'GET',
          url: 'https://gw.test.com/api/medicsale/4.0/get_advisory_info?doctorId=1405348695',
          data: '',
        },
        response: { status: 0, data: '' },
      },
      level: 'info',
      time: 1626160278009,
    },
    {
      type: 'Xhr',
      category: 'exception',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://a.test.com/#/binding-doctors',
        time: 1626160278009,
        elapsedTime: 10153,
        level: 'low',
        message: 'http请求失败，失败原因：超时 https://gw.test.com/api/medicsale/4.0/get_advisory_info',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          traceId: '8f9b0c47-13d2-409e-b8bd-899b4a4363c8',
          method: 'GET',
          url: 'https://gw.test.com/api/medicsale/4.0/get_advisory_info?doctorId=1405348695',
          data: '',
        },
        response: { status: 0, data: '' },
      },
      level: 'error',
      time: 1626160278009,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data:
        '<button class="card-btn van-button van-button--primary van-button--normal van-button--plain van-button--text">立即咨询</button>',
      level: 'info',
      time: 1626160291654,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://a.test.com/#/binding-doctors',
        time: 1626160291693,
        elapsedTime: 10148,
        level: 'low',
        message: 'http请求失败，失败原因：超时 https://gw.test.com/api/medicsale/4.0/get_advisory_info',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          traceId: 'c4652ce6-48d6-4e53-8b5a-03c535fc5f00',
          method: 'GET',
          url: 'https://gw.test.com/api/medicsale/4.0/get_advisory_info?doctorId=1405348695',
          data: '',
        },
        response: { status: 0, data: '' },
      },
      level: 'info',
      time: 1626160291693,
    },
    {
      type: 'Xhr',
      category: 'exception',
      data: {
        type: 'HTTP_ERROR',
        url: 'https://a.test.com/#/binding-doctors',
        time: 1626160291693,
        elapsedTime: 10148,
        level: 'low',
        message: 'http请求失败，失败原因：超时 https://gw.test.com/api/medicsale/4.0/get_advisory_info',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          traceId: 'c4652ce6-48d6-4e53-8b5a-03c535fc5f00',
          method: 'GET',
          url: 'https://gw.test.com/api/medicsale/4.0/get_advisory_info?doctorId=1405348695',
          data: '',
        },
        response: { status: 0, data: '' },
      },
      level: 'error',
      time: 1626160291693,
    },
  ],
  ua:
    'Mozilla/5.0 (Linux; Android 9; MHA-AL00 Build/HUAWEIMHA-AL00; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.62 XWEB/2853 MMWEBSDK/20210601 Mobile Safari/537.36 MMWEBID/1199 MicroMessenger/8.0.7.1920(0x28000737) Process/toolsmp WeChat/arm64 Weixin NetType/WIFI Language/zh_CN ABI/arm64',
  elapsedTime: '10148',
  teamId: '2',
  userId: '',
  date: '2021-07-13 15:11:49',
  __source__: '',
  __time__: '1618299205',
})

eventInfoMap.set(ErrorDataType.js, {
  projectId: '1',
  apikey: '79dd5300-2f02-11eb-85bd-77170d98d921',
  browser: 'WeChat',
  browserVersion: '7.0.21.1800',
  device: 'Xiaomi',
  engine: 'Blink',
  ip: '106.34.55.33',
  isp: '电信',
  level: 'normal',
  location: '中国 河南省 郑州市',
  os: 'Android',
  osVersion: '10',
  record: '[]',
  request: 'null',
  response: 'null',
  sdkVersion: '1.2.0',
  sdkName: '@zyf2e/mitojs',
  customTag: 'null',
  cookies: '{"TRYCATCH_TOKEN":"65247162-0072-4119-b4d2-60a4b02862a8"}',
  stack:
    '[{"url":"http://test.com/js/chunk-28971c98.4e32a592.js","func":"UNKNOWN_FUNCTION","args":[],"line":1,"column":4377}]',
  eventId: '15913',
  breadcrumb: [
    {
      type: 'Console',
      category: 'debug',
      data: { args: ['WeixinJSBridge exec time', 10], level: 'log' },
      level: 'info',
      time: 1608689561266,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689562029,
        elapsedTime: 438,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url: 'https://test.com/api/medicsale/4.0/drug_category',
          data: '',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689562029,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689562035,
        elapsedTime: 590,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url: 'https://test.com/api/medicsale_patient/1.0/share_config?url=http:%2F%2Ftest.com%2F%23%2Fdrug-venue',
          data: '',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689562035,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689562428,
        elapsedTime: 402,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url: 'https://test.com/api/medicsale/4.0/item_list?pageSize=20&pageNo=1&drugCategoryId=109',
          data: '',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689562428,
    },
    {
      type: 'Console',
      category: 'debug',
      data: { args: [{ errMsg: 'config:invalid url domain' }], level: 'warn' },
      level: 'warning',
      time: 1608689562442,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689562943,
        elapsedTime: 524,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url: 'https://test.com/api/medicsale/4.0/medicsale_count_trolley',
          data: '',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689562943,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<input class="van-field__control"></input>',
      level: 'info',
      time: 1608689565446,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689565976,
        elapsedTime: 546,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url: 'https://test.com/api/medicsale/4.0/item_list?pageSize=20&pageNo=1&keyWord=',
          data: '',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689565976,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689571203,
        elapsedTime: 294,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url:
            'https://test.com/api/medicsale/4.0/item_list?pageSize=20&pageNo=1&keyWord=%E5%88%A9%E4%BC%90%E6%B2%99%E7%8F%AD',
          data: '',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689571203,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<button class="sub_button van-button van-button--primary van-button--mini">加入需求清单</button>',
      level: 'info',
      time: 1608689573893,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689574239,
        elapsedTime: 337,
        level: 'low',
        message: 'ok',
        name: 'xhr--POST',
        request: {
          httpType: 'xhr',
          method: 'POST',
          url: 'https://test.com/api/medicsale/4.0/medicsale_add_one_trolley',
          data: '{"itemId":27441}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689574240,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<button class="sub_button van-button van-button--primary van-button--mini">加入需求清单</button>',
      level: 'info',
      time: 1608689578266,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689578509,
        elapsedTime: 240,
        level: 'low',
        message: 'ok',
        name: 'xhr--POST',
        request: {
          httpType: 'xhr',
          method: 'POST',
          url: 'https://test.com/api/medicsale/4.0/medicsale_add_one_trolley',
          data: '{"itemId":27441}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689578509,
    },
    {
      type: 'UI.Click',
      category: 'user',
      data: '<button class="sub_button van-button van-button--primary van-button--mini">加入需求清单</button>',
      level: 'info',
      time: 1608689579280,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689579625,
        elapsedTime: 343,
        level: 'low',
        message: 'ok',
        name: 'xhr--POST',
        request: {
          httpType: 'xhr',
          method: 'POST',
          url: 'https://test.com/api/medicsale/4.0/medicsale_add_one_trolley',
          data: '{"itemId":27441}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689579625,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689580557,
        elapsedTime: 189,
        level: 'low',
        message: 'ok',
        name: 'xhr--GET',
        request: {
          httpType: 'xhr',
          method: 'GET',
          url: 'https://test.com/api/medicsale_patient/1.0/share_config?url=http:%2F%2Ftest.com%2F%23%2Fdrug-venue',
          data: '',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689580558,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'http://test.com/#/drug-venue',
        time: 1608689580707,
        elapsedTime: 336,
        level: 'low',
        message: 'ok',
        name: 'xhr--POST',
        request: {
          httpType: 'xhr',
          method: 'POST',
          url: 'https://test.com/api/user/2.0/md_user_basic_info',
          data: '{}',
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1608689580707,
    },
    {
      type: 'Route',
      category: 'user',
      data: { from: '/#/drug-venue', to: '/#/request-cart' },
      level: 'info',
      time: 1608689580738,
    },
    {
      type: 'Code Error',
      category: 'exception',
      data: {
        time: 1608689580788,
        url: 'http://test.com/#/request-cart',
        name: 'TypeError',
        level: 'normal',
        message: "Cannot read property 'classList' of null",
        stack: [
          {
            url: 'http://test.com/js/chunk-28971c98.4e32a592.js',
            func: 'UNKNOWN_FUNCTION',
            args: [],
            line: 1,
            column: 4377,
          },
        ],
        type: 'JAVASCRIPT_ERROR',
        errorId: -1088928641,
      },
      level: 'error',
      time: 1608689580790,
    },
  ],
  trackerId: '65247162-0072-4119-b4d2-60a4b02862a8',
  type: 'JAVASCRIPT_ERROR',
  ua:
    'Mozilla/5.0 (Linux; Android 10; Redmi K30 5G Build/QKQ1.191222.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045435 Mobile Safari/537.36 MMWEBID/6359 MicroMessenger/7.0.21.1800(0x27001539) Process/tools WeChat/arm64 Weixin NetType/4G Language/zh_CN ABI/arm64',
  url: 'http://test.com/#/request-cart',
  projectId_0: '1',
  errorId: '-1088928641',
  elapsedTime: 'null',
  time: '1608689580788',
  teamId: '2',
  userId: '',
  date: '2020-12-23 10:15:00',
  __source__: '',
  __time__: '1603296987',
})
eventInfoMap.set(ErrorDataType.mini, {
  projectId: '31',
  apikey: 'a1329cc0-563b-11eb-98fe-259847d73cdd',
  browser: 'WeChat',
  browserVersion: '7.0.4',
  device: 'Apple',
  engine: 'WebKit',
  ip: '192.168.122.76',
  isp: '内网IP',
  level: 'normal',
  location: '内网本地',
  os: 'iOS',
  osVersion: '11.0',
  record: '[]',
  request: 'null',
  response: 'null',
  sdkVersion: '1.2.3',
  sdkName: '@zyf2e/mitojs',
  customTag: 'null',
  cookies: '{}',
  stack: '[]',
  eventId: '7017',
  breadcrumb: [
    {
      category: 'lifecycle',
      type: 'App On Launch',
      data: { path: 'pages/index/index', query: {} },
      level: 'info',
      time: 1611133955771,
    },
    {
      category: 'lifecycle',
      type: 'App On Show',
      data: { path: 'pages/index/index', query: {} },
      level: 'info',
      time: 1611133955778,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'pages/index/index?',
        elapsedTime: 468,
        level: 'low',
        message: 'ok',
        name: 'xhr--post',
        request: {
          httpType: 'xhr',
          traceId: 'c90ccf98-57c0-4809-ac3c-e0a35f31fc83',
          method: 'post',
          url: 'https://test.com/api/saas_scrm_merchant/1.0/queryEmpMerchantList',
          data: {},
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1611133956844,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'pages/index/index?',
        elapsedTime: 191,
        level: 'low',
        message: 'ok',
        name: 'xhr--post',
        request: {
          httpType: 'xhr',
          traceId: '2b6dc4a1-d7f9-41f7-af79-fed8ebe627f3',
          method: 'post',
          url: 'https://test.com/api/saas_scrm_merchant/1.0/queryEmpBaseInfo',
          data: { merchantId: '176729902792705' },
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1611133957046,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'pages/index/index?',
        elapsedTime: 62,
        level: 'low',
        message: 'ok',
        name: 'xhr--get',
        request: {
          httpType: 'xhr',
          traceId: '5feac14e-ecb0-4ab3-a98e-cce7a2001f30',
          method: 'get',
          url: 'https://test.com/api/saas_scrm_dashboard/1.0.0/queryDashboardPageHome',
          data: { merchantId: '176729902792705' },
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1611133957114,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'pages/index/index?',
        elapsedTime: 162,
        level: 'low',
        message: 'ok',
        name: 'xhr--POST',
        request: {
          httpType: 'xhr',
          method: 'POST',
          url: 'https://frontlo-collection.com/log.gif',
          data: {
            trackKey: 'ed155520fc1b0858e7a9eb30a084b1328d5c8173b2b51bda0110edb6bd774f1c',
            data: {
              deviceId: '6dacec30-64d4-4870-8a05-157ba110e086',
              uid: '',
              version: '7.0.4',
              isLogin: true,
              items: [
                {
                  id: '8ae6fd97-8d0f-469b-ae1c-010d745d4d54',
                  actionType: 'page',
                  merchantId: '176729902792705',
                  trackTime: 1611133957122,
                  trackId: 'scrm_mini_page_home',
                  custom: { sendTime: '2021-01-20 17:12:37', env: 'development' },
                },
              ],
            },
          },
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1611133957287,
    },
    {
      type: 'Route',
      category: 'user',
      data: { from: 'pages/index/index?', to: '/pages/statistics/index?__id__=1' },
      level: 'info',
      time: 1611133962214,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'pages/index/index?',
        elapsedTime: 79,
        level: 'low',
        message: 'ok',
        name: 'xhr--POST',
        request: {
          httpType: 'xhr',
          method: 'POST',
          url: 'https://frontlo-collectioncom/log.gif',
          data: {
            trackKey: 'ed155520fc1b0858e7a9eb30a084b1328d5c8173b2b51bda0110edb6bd774f1c',
            data: {
              deviceId: '6dacec30-64d4-4870-8a05-157ba110e086',
              uid: '',
              version: '7.0.4',
              isLogin: true,
              items: [
                {
                  id: '4b806d87-76fe-47b0-89ad-02aa39d478d9',
                  actionType: 'click',
                  merchantId: '176729902792705',
                  trackTime: 1611133962197,
                  trackId: 'scrm_mini_click_home_dataBoard',
                  custom: { sendTime: '2021-01-20 17:12:42', env: 'development' },
                },
              ],
            },
          },
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1611133962277,
    },
    {
      type: 'Xhr',
      category: 'http',
      data: {
        type: 'HTTP_ERROR',
        url: 'pages/statistics/index?',
        elapsedTime: 71,
        level: 'low',
        message: 'ok',
        name: 'xhr--get',
        request: {
          httpType: 'xhr',
          traceId: '8aaed19a-a2b5-4c27-a5db-f62cdd60abe6',
          method: 'get',
          url: 'https://test.com/api/saas_scrm_dashboard/1.0.0/queryDashboardMerchantOrder',
          data: { merchantId: '176729902792705', dashboardTimeBegin: 1611072000000, dashboardTimeEnd: 1611158399999 },
        },
        response: { status: 200, data: '' },
      },
      level: 'info',
      time: 1611133962553,
    },
    {
      category: 'exception',
      type: 'Code Error',
      level: 'error',
      data: {
        message: 'thirdScriptError',
        name: "Cannot read property 'defaultView' of undefined;at SelectorQuery callback function",
        stacks: [
          { args: [], func: 'UNKNOWN_FUNCTION', column: 0, line: null, url: '' },
          {
            args: [],
            func: 'Object.getStyle',
            column: 54967,
            line: 1390,
            url:
              'http://127.0.0.1:56376/appservice/common/vendor.js?t=qywx_simulator_plugin&s=1611107847500&v=1611133955118',
          },
          {
            args: [],
            func: 'Object.getHeight',
            column: 55161,
            line: 1390,
            url:
              'http://127.0.0.1:56376/appservice/common/vendor.js?t=qywx_simulator_plugin&s=1611107847500&v=1611133955118',
          },
          {
            args: [],
            func: 't.e._initCanvas',
            column: 77299,
            line: 1390,
            url:
              'http://127.0.0.1:56376/appservice/common/vendor.js?t=qywx_simulator_plugin&s=1611107847500&v=1611133955118',
          },
          {
            args: [],
            func: 'UNKNOWN_FUNCTION',
            column: 76651,
            line: 1390,
            url:
              'http://127.0.0.1:56376/appservice/common/vendor.js?t=qywx_simulator_plugin&s=1611107847500&v=1611133955118',
          },
          {
            args: [],
            func: 'e.n._initCanvas',
            column: 25625,
            line: 1390,
            url:
              'http://127.0.0.1:56376/appservice/common/vendor.js?t=qywx_simulator_plugin&s=1611107847500&v=1611133955118',
          },
          {
            args: [],
            func: 'e.n._init',
            column: 26148,
            line: 1390,
            url:
              'http://127.0.0.1:56376/appservice/common/vendor.js?t=qywx_simulator_plugin&s=1611107847500&v=1611133955118',
          },
          {
            args: [],
            func: 'UNKNOWN_FUNCTION',
            column: 21942,
            line: 1390,
            url:
              'http://127.0.0.1:56376/appservice/common/vendor.js?t=qywx_simulator_plugin&s=1611107847500&v=1611133955118',
          },
          {
            args: [],
            func: 'UNKNOWN_FUNCTION',
            column: 2065,
            line: 81,
            url:
              'http://127.0.0.1:56376/appservice/components/chart-panel.js?t=qywx_simulator_plugin&s=1611107847500&v=1611133954580',
          },
          {
            args: [],
            func: 'n.<anonymous>',
            column: 41,
            line: 98,
            url:
              'http://127.0.0.1:56376/appservice/wxcomponents/f2-canvas/f2-canvas.js?t=qywx_simulator_plugin&s=1611107847500&v=1611132503041',
          },
          { args: [], func: 'Function.<anonymous>', column: 856235, line: 1, url: 'WAService.js' },
        ],
        time: 1611133962611,
        level: 'normal',
        url: 'pages/statistics/index?',
        type: 'JAVASCRIPT_ERROR',
        errorId: -576104886,
      },
      time: 1611133962611,
    },
  ],
  trackerId: 'a6e33300-5aff-11eb-b17f-85f38f3d1688',
  type: 'JAVASCRIPT_ERROR',
  ua:
    'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1 wechatdevtools/1.03.2012121 MicroMessenger/7.0.4 Language/zh_CN webview/ wxwork',
  url: 'pages/statistics/index?',
  projectId_0: '31',
  errorId: '-576104886',
  elapsedTime: 'null',
  time: '1611133962611',
  teamId: '4',
  userId: '',
  date: '2021-01-20 17:15:00',
  __source__: '',
  __time__: '1603347924',
})
export const errorInfoMap = new Map()
errorInfoMap.set(ErrorDataType.js, {
  errorId: 493811206,
  type: 'JAVASCRIPT_ERROR',
  name: 'TypeError',
  message: 'n.getAttribute is not a function',
  eventSum: 380,
  trackerSum: 185,
  projectId: 6,
  teamId: 1,
  userId: 1,
  userName: 'mitojs',
  level: 2,
  status: 1,
  createdAt: '2020-12-16T08:48:00.000Z',
  updatedAt: '2021-01-21T14:03:00.000Z',
  isCollect: false,
  projectName: 'js-demo',
  platform: 3,
})
errorInfoMap.set(ErrorDataType.vue, {
  errorId: 264174268,
  type: 'HTTP_ERROR',
  name: 'xhr--GET',
  message: 'http请求失败，失败原因：超时 https://a.test.com/api/get_advisory_info',
  eventSum: 41,
  trackerSum: 31,
  projectId: 1,
  teamId: 2,
  userId: 5,
  userName: '陈金伙',
  level: 4,
  status: 4,
  ossUrls: '["https://public-mito.oss-cn-hangzhou.aliyuncs.com/264174268_10138869"]',
  remark: null,
  createdAt: '2021-02-20T18:20:37.000Z',
  updatedAt: '2021-07-13T07:11:31.000Z',
  isCollect: false,
  projectName: 'Vue-demo',
  platform: 1,
})
errorInfoMap.set(ErrorDataType.react, {
  errorId: -1811448882,
  type: 'JAVASCRIPT_ERROR',
  name: 'TypeError',
  message: "Cannot read property 'status' of undefined",
  eventSum: 5,
  trackerSum: 3,
  projectId: 14,
  teamId: 1,
  userId: 1,
  userName: 'mitojs',
  level: 3,
  status: 1,
  createdAt: '2021-01-12T07:48:00.000Z',
  updatedAt: '2021-01-18T06:12:00.000Z',
  isCollect: false,
  projectName: 'react-demo',
  platform: 2,
})
errorInfoMap.set(ErrorDataType.mini, {
  errorId: -576104886,
  type: 'JAVASCRIPT_ERROR',
  name: "Cannot read property 'defaultView' of undefined;at SelectorQuery callback function",
  message: 'thirdScriptError',
  eventSum: 182,
  trackerSum: 96,
  projectId: 31,
  teamId: 4,
  userId: 1,
  userName: 'mitojs',
  level: 3,
  status: 1,
  createdAt: '2021-01-20T09:12:00.000Z',
  updatedAt: '2021-01-20T09:15:00.000Z',
  isCollect: false,
  projectName: 'wx-mini-demo',
  platform: 4,
})

export const tagsMap = new Map()
tagsMap.set(ErrorDataType.js, [
  { label: 'browser', values: ['WeChat'], sums: [455] },
  {
    label: 'browserVersion',
    values: [
      '7.0.22.1820',
      '7.0.21.1800',
      '7.0.21',
      '7.0.4',
      '7.0.20.1781',
      '7.0.19.1760',
      '7.0.20',
      '7.0.18',
      '7.0.16.1700',
      '7.0.15.1680',
    ],
    sums: [182, 143, 25, 23, 16, 16, 14, 7, 7, 3],
  },
  {
    label: 'device',
    values: ['Huawei', 'Apple', 'Xiaomi', 'OPPO', 'Samsung', 'Nokia', 'meizu', 'OnePlus'],
    sums: [176, 77, 36, 15, 4, 1, 1, 1],
  },
  { label: 'engine', values: ['Blink', 'WebKit'], sums: [378, 77] },
  {
    label: 'ip',
    values: [
      '39.170.19.244',
      '117.136.87.160',
      '124.160.213.207',
      '106.18.171.28',
      '221.222.21.24',
      '117.136.74.140',
      '119.55.64.138',
      '182.104.74.84',
      '124.64.19.102',
      '27.196.172.193',
    ],
    sums: [23, 7, 5, 3, 3, 3, 3, 3, 3, 2],
  },
  {
    label: 'isp',
    values: ['移动', '电信', '联通', '鹏博士', '湖北广电', '陕西广电', '华数传媒'],
    sums: [206, 134, 96, 10, 4, 4, 1],
  },
  {
    label: 'location',
    values: [
      '中国 湖北省 武汉市',
      '中国 江西省 南昌市',
      '中国 浙江省 杭州市',
      '中国 内蒙古 包头市',
      '中国 湖南省 长沙市',
      '中国 辽宁省 沈阳市',
      '中国 北京 北京市',
      '中国 河南省 郑州市',
      '中国 内蒙古 呼和浩特市',
      '中国 江西省 萍乡市',
    ],
    sums: [42, 42, 38, 18, 17, 17, 16, 12, 11, 11],
  },
  { label: 'os', values: ['Android', 'iOS', 'Windows'], sums: [377, 77, 1] },
  {
    label: 'osVersion',
    values: ['10', '9', '8.1.0', '11.0', '13.6', '8.0.0', '7.1.1', '7.1.2', '14.2', '14.3'],
    sums: [203, 99, 28, 23, 15, 12, 11, 10, 9, 8],
  },
  {
    label: 'trackerId',
    values: [
      '400d4cb0-ed71-4758-9be0-c9fe24734c28',
      'b3161e41-1e17-4026-8a3f-c2e191e3a051',
      '0a0a6391-ff99-47e1-be62-456a8ddae530',
      '9ef20720-5631-11eb-b448-0915de8c3f46',
      '50e9fba0-5794-11eb-bec7-0780f0eb9df6',
      '5247f497-8134-4cdb-b8be-c11873fe6c17',
      'df317b38-8041-4049-b0ff-0c24883d219d',
      '8598d507-51fe-4a33-a4fa-620b4d9eaa07',
      '90000310-928e-41f0-a441-f03f286810b0',
      'deca44f8-bd00-4b1c-a7aa-fc6aa20e387a',
    ],
    sums: [8, 7, 7, 6, 5, 5, 5, 4, 4, 3],
  },
  { label: 'type', values: ['RESOURCE_ERROR'], sums: [455] },
])

tagsMap.set(ErrorDataType.vue, [
  { label: 'browser', values: ['WeChat'], sums: [150] },
  {
    label: 'browserVersion',
    values: [
      '7.0.21.1800',
      '7.0.22.1820',
      '7.0.16.1700',
      '7.0.20.1781',
      '7.0.18.1740',
      '7.0.18',
      '7.0.19.1760',
      '7.0.15.1680',
      '7.0.17',
      '7.0.20',
    ],
    sums: [82, 38, 7, 6, 6, 4, 3, 2, 1, 1],
  },
  { label: 'device', values: ['Huawei', 'Apple', 'OPPO'], sums: [49, 6, 4] },
  { label: 'engine', values: ['Blink', 'WebKit'], sums: [144, 6] },
  {
    label: 'ip',
    values: [
      '218.26.54.131',
      '111.0.185.121',
      '223.104.16.132',
      '106.33.100.172',
      '111.25.194.170',
      '171.12.3.114',
      '39.189.48.232',
      '1.192.25.176',
      '218.26.55.137',
      '223.104.244.203',
    ],
    sums: [9, 9, 9, 8, 7, 6, 6, 6, 6, 4],
  },
  { label: 'isp', values: ['移动', '电信', '联通', '贵州广电'], sums: [65, 48, 36, 1] },
  {
    label: 'location',
    values: [
      '中国 河南省 郑州市',
      '中国 吉林省 长春市',
      '中国 山西省 太原市',
      '中国 浙江省 杭州市',
      '中国 吉林省 松原市',
      '中国 浙江省 宁波市',
      '中国 湖南省 长沙市',
      '中国 吉林省 白城市',
      '中国 山西省 长治市',
      '中国 山西省 晋城市',
    ],
    sums: [37, 19, 16, 13, 10, 6, 5, 4, 4, 4],
  },
  { label: 'os', values: ['Android', 'iOS'], sums: [144, 6] },
  {
    label: 'osVersion',
    values: ['10', '9', '6.0.1', '14.1', '8.1.0', '7.1.1', '6.0', '5.1.1', '11', '7.1.2'],
    sums: [84, 43, 4, 4, 3, 3, 2, 2, 2, 1],
  },
  {
    label: 'trackerId',
    values: [
      '34ad430f-012b-45e1-9190-8a08ae32b3a1',
      'd656e480-4bfd-11eb-ae7c-a3d8b7c56949',
      'c2bcced5-8074-48a1-a39a-bab4dfe645be',
      '071a40f0-4422-11eb-aa47-01e168e4ae99',
      '4c1c6570-43f5-11eb-aa47-01e168e4ae99',
      '73740300-4efc-11eb-ae7c-a3d8b7c56949',
      '1a6938f0-4409-11eb-aa47-01e168e4ae99',
      'c506da0e-0e97-4df0-9388-0dc7030c2552',
      '7f2b29e0-5090-11eb-ae7c-a3d8b7c56949',
      '8815c688-63b8-4e7d-b9c1-10abd6402f24',
    ],
    sums: [14, 9, 9, 9, 7, 6, 5, 4, 4, 4],
  },
  { label: 'type', values: ['PROMISE_ERROR'], sums: [150] },
])

tagsMap.set(ErrorDataType.react, [
  { label: 'browser', values: ['WeChat'], sums: [34] },
  {
    label: 'browserVersion',
    values: ['7.0.22.1820', '7.0.20', '7.0.21.1800', '7.0.19.1760', '7.0.17.1720', '7.0.20.1781', '7.0.14', '7.0.18'],
    sums: [14, 8, 4, 4, 1, 1, 1, 1],
  },
  { label: 'device', values: ['Huawei', 'Apple', 'Xiaomi', 'OPPO'], sums: [11, 10, 1, 1] },
  { label: 'engine', values: ['Blink', 'WebKit'], sums: [24, 10] },
  {
    label: 'ip',
    values: [
      '175.149.124.14',
      '1.31.1.160',
      '103.228.209.214',
      '183.95.248.175',
      '139.207.14.9',
      '111.30.217.1',
      '1.62.74.114',
      '60.220.84.176',
      '117.136.53.228',
      '61.242.148.145',
    ],
    sums: [11, 3, 3, 2, 2, 2, 1, 1, 1, 1],
  },
  { label: 'isp', values: ['联通', '移动', '电信', '广西广电'], sums: [24, 4, 3, 3] },
  {
    label: 'location',
    values: [
      '中国 辽宁省 铁岭市',
      '中国 内蒙古 赤峰市',
      '中国 广西 南宁市',
      '中国 湖北省 荆门市',
      '中国 四川省 成都市',
      '中国 湖北省 武汉市',
      '中国 江西省 南昌市',
      '中国 山西省 长治市',
      '中国 天津 天津市',
      '中国 黑龙江省 哈尔滨市',
    ],
    sums: [11, 3, 3, 2, 2, 2, 2, 2, 2, 1],
  },
  { label: 'os', values: ['Android', 'iOS'], sums: [24, 10] },
  {
    label: 'osVersion',
    values: ['10', '14.3', '8.1.0', '9', '8.0.0', '12.0.1', '13.4.1'],
    sums: [10, 8, 7, 6, 1, 1, 1],
  },
  {
    label: 'trackerId',
    values: [
      '1bed117c-7c13-42f4-85c4-d32c43846f2e',
      '8c2165f0-4e3e-11eb-ae7c-a3d8b7c56949',
      '55cb6410-4efc-11eb-ae7c-a3d8b7c56949',
      'd80b8493-3e90-494e-ab76-1db0d8be0ac8',
      '11959440-4efd-11eb-ae7c-a3d8b7c56949',
      '91197030-4802-11eb-a4e3-fd23faebf492',
      '75ff36d0-5ae6-11eb-8872-cde1342b8bcc',
      '56c6d260-52de-11eb-8dae-0338ebbcb7d8',
      '224ff5c0-5ab8-11eb-b41b-2d0278948751',
      '1e588b10-522c-11eb-8dae-0338ebbcb7d8',
    ],
    sums: [7, 3, 2, 2, 2, 2, 2, 1, 1, 1],
  },
  { label: 'type', values: ['RESOURCE_ERROR'], sums: [34] },
])

tagsMap.set(ErrorDataType.mini, [
  { label: 'browser', values: ['Chrome', 'Safari', 'Firefox'], sums: [166, 15, 2] },
  {
    label: 'browserVersion',
    values: [
      '87.0.4280.88',
      '86.0.4240.198',
      '87.0.4280.67',
      '13.0.5',
      '87.0.4280.66',
      '85.0.4183.102',
      '75.0.3770.80',
      '86.0.4240.183',
      '86.0.4240.75',
      '85.0.4183.121',
    ],
    sums: [70, 24, 23, 13, 11, 8, 7, 6, 5, 3],
  },
  { label: 'engine', values: ['Blink', 'WebKit', 'Gecko'], sums: [166, 15, 2] },
  {
    label: 'ip',
    values: [
      '192.168.62.124',
      '192.168.63.18',
      '192.168.61.46',
      '192.168.40.79',
      '192.168.62.69',
      '192.168.62.249',
      '192.168.61.87',
      '192.168.61.94',
      '192.168.40.113',
      '192.168.60.113',
    ],
    sums: [16, 11, 11, 9, 7, 6, 6, 5, 5, 4],
  },
  { label: 'isp', values: ['内网IP', '阿里巴巴'], sums: [167, 16] },
  { label: 'location', values: ['内网本地', '美国 0 0'], sums: [167, 16] },
  { label: 'os', values: ['Mac OS', 'Windows'], sums: [130, 53] },
  {
    label: 'osVersion',
    values: ['10', '10.15.1', '10.15.3', '10.15.7', '10.15.6', '11.1.0', '10.14.5', '10.14.6', '11.0.0', '11.0.1'],
    sums: [53, 42, 37, 17, 15, 6, 4, 4, 3, 1],
  },
  {
    label: 'trackerId',
    values: [
      '7deb3ad9-c11b-401c-aed2-7dd5737d6604',
      '84a7205f-cd4b-498a-bd8f-e61cadcc76a8',
      '3d408615-b42c-4235-b2f4-0e6ad8f23c2b',
      '17e39267-e8be-4db2-b487-1b8b7886ab38',
      '0ef9e3e0-fd98-4314-b746-f50a4cb46078',
      'f4a8f95c-9463-4ec8-9b70-8ea1b7d66c19',
      'a46377d1-b81d-4615-9ff9-c8b7d3236664',
      '98ff500b-4a5b-4685-8950-731824a0d20a',
      '96ba30b0-a406-4484-8338-538180930601',
      'a94b369f-1d51-4cb9-9e45-544da4268c41',
    ],
    sums: [30, 11, 10, 9, 9, 7, 6, 6, 5, 5],
  },
  { label: 'type', values: ['PROMISE_ERROR'], sums: [183] },
])

export const sourceMap = new Map()
sourceMap.set(ErrorDataType.react, {
  originFile: [
    "import React, { useEffect, useState } from 'react'",
    "import { Table, Tag, Button, Tooltip, Badge, Select, Menu, Dropdown, message } from 'antd'",
    "import * as styles from './index.module.less'",
    "import Icon from '@components/Icon'",
    'import {',
    '  THEMECOLORS,',
    '  ICONTYPE,',
    '  ErrorStatus,',
    '  ErrorLevel,',
    '  platformMap,',
    '  EnumErrorStatus,',
    '  ErrorLevelBadgeColor,',
    '  ErrorStatusBadgeStatus,',
    "} from '@common/constant'",
    "import { formatTime } from '@/utils'",
    "import { ClockCircleFilled } from '@ant-design/icons'",
    "import { ArchiveStar } from '@/components/ArchiveStar'",
    "import { TableWithHeader } from '@/components/TableWithHeader'",
    "import { collectErrorsFetch } from '../../Errors/services/index'",
    "import styled from 'styled-components'",
    "import ProjectPlatform from '../ProjectPlatform'",
    "import ErrorAssign from '../ErrorAssign'",
    "import { ErrorIgnoreBtn, ErrorSolvingBtn } from '../ErrorSolve'",
    "import config from '@/config'",
    '',
    'type TableRow = NErrorsTable.List',
    'type propsType = {',
    '  tableData: TableRow[]',
    '  pagination: { total: number; pageSize: number; current: number }',
    '  loading: boolean',
    '  fetchData: Function',
    '  onChange: Function',
    '}',
    'const FlexBlock = styled.div`',
    '  display: flex;',
    '  align-items: center;',
    '`',
    'const ErrorStatusFilters = Object.entries(ErrorStatus).map(([key, value]) => ({',
    '  text: value,',
    '  value: key,',
    '}))',
    'export default function ErrorsTable(props: propsType) {',
    '  const [selectedItem, setSelectedItem] = useState<TableRow[]>([])',
    '  const [selectedRowKeys, setSelectedRowKeys] = useState([])',
    '  const [solvingDisabled, setSolvingDisabled] = useState(true)',
    '  const [collectDisabled, setCollectDisabled] = useState(true)',
    '  const [ignoreDisabled, setIgnoreDisabled] = useState(true)',
    '  function clearSelected() {',
    '    setSelectedRowKeys([])',
    '    setSolvingDisabled(true)',
    '    setCollectDisabled(true)',
    '    setIgnoreDisabled(true)',
    '  }',
    '',
    '  function handleClickError(errorId: number) {',
    '    const domain = `${config.front}errors/${errorId}/info`',
    '    window.open(domain)',
    '  }',
    '',
    '  const handleCollect = async (items: NCollect.item[] = [], isCollect: boolean) => {',
    '    const res = await collectErrorsFetch({',
    '      items,',
    '      isCollect,',
    '    })',
    '    message.success(res.message)',
    '    props.fetchData()',
    '    clearSelected()',
    '  }',
    '',
    '  const columns = [',
    '    {',
    '      title: () => {',
    '        return (',
    '          <div className={styles.header}>',
    '            <div className={styles.title}>错误信息</div>',
    '          </div>',
    '        )',
    '      },',
    "      key: 'action',",
    '      width: 600,',
    "      fixed: 'left',",
    '      render: (row: TableRow) => (',
    '        <div className={styles.project}>',
    '          <div className={styles.error} onClick={() => handleClickError(row.errorId)}>',
    '            <div className={styles.url}>{row.url}</div>',
    '            <div className={styles.message}>{row.message}</div>',
    '            <div className={styles.timec}>',
    '              <ClockCircleFilled style={{ fontSize: 16, color: THEMECOLORS.blue, marginRight: 8 }} />',
    '              <span className={styles.time}>',
    '                {formatTime(row.createdAt)} ~ {formatTime(row.updatedAt)}',
    '              </span>',
    '            </div>',
    '          </div>',
    '          <div className={styles.info}>',
    '            <ProjectPlatform platform={row.platform} projectName={row.projectName}></ProjectPlatform>',
    '',
    '            <FlexBlock>',
    '              <Tooltip title="收藏">',
    "                <div style={{ marginRight: '10px' }}>",
    '                  <ArchiveStar',
    '                    status={row.isCollect}',
    '                    size={24}',
    '                    onClick={() => handleCollect([{ errorId: row.errorId, projectId: row.projectId }], !row.isCollect)}',
    '                  />',
    '                </div>',
    '              </Tooltip>',
    '',
    '              <ErrorAssign row={row}></ErrorAssign>',
    '            </FlexBlock>',
    '          </div>',
    '        </div>',
    '      ),',
    '    },',
    '    {',
    "      title: '错误类型',",
    "      dataIndex: 'type',",
    "      key: 'type',",
    '      width: 140,',
    '      render: type => <span>{type}</span>,',
    '    },',
    '',
    '    {',
    "      title: '错误状态',",
    "      dataIndex: 'status',",
    '      width: 120,',
    "      key: 'status',",
    '      filters: ErrorStatusFilters,',
    '      render: status => (',
    '        <span>',
    '          <Badge status={ErrorStatusBadgeStatus[status]} />',
    '          {ErrorStatus[status]}',
    '        </span>',
    '      ),',
    '    },',
    '    {',
    "      title: '等级',",
    "      dataIndex: 'level',",
    '      width: 120,',
    '      sorter: true,',
    "      key: 'level',",
    '      render: level => (',
    '        <span>',
    '          <Badge color={ErrorLevelBadgeColor[level]} status="processing" />',
    '          {ErrorLevel[level]}',
    '        </span>',
    '      ),',
    '    },',
    '    {',
    "      title: '事件数',",
    "      dataIndex: 'eventSum',",
    '      width: 100,',
    "      key: 'eventSum',",
    '      sorter: true,',
    '    },',
    '    {',
    "      title: '用户数',",
    "      dataIndex: 'trackerSum',",
    '      width: 100,',
    "      key: 'trackerSum',",
    '      sorter: true,',
    '    },',
    '  ]',
    '',
    '  useEffect(() => {',
    '    const length = selectedItem.length === 0',
    '    const solvingBtndisabled = length',
    '      ? true',
    '      : selectedItem.some(item => [EnumErrorStatus.solved, EnumErrorStatus.solving].includes(item.status))',
    '    const collectBtndisabled = length ? true : false',
    '    const ignoreBtndisabled = length',
    '      ? true',
    '      : selectedItem.some(item => [EnumErrorStatus.solving, EnumErrorStatus.ignored].includes(item.status))',
    '    setSolvingDisabled(solvingBtndisabled)',
    '    setCollectDisabled(collectBtndisabled)',
    '    setIgnoreDisabled(ignoreBtndisabled)',
    '  }, [selectedItem])',
    '',
    '  const rowSelection = {',
    '    selectedRowKeys,',
    '    onChange: selectedRowKeys => {',
    '      setSelectedRowKeys(selectedRowKeys)',
    '    },',
    '    onSelect: (record, selected, selectedRows: TableRow[]) => {',
    '      setSelectedItem(selectedRows)',
    '    },',
    '    onSelectAll: (selected, selectedRows, changeRows) => {',
    '      setSelectedItem(selectedRows)',
    '    },',
    '  }',
    '',
    '  const updateErrorSuccess = async () => {',
    '    await props.fetchData()',
    '    clearSelected()',
    '  }',
    '',
    '  return (',
    '    <TableWithHeader',
    '      pagination={{',
    '        ...props.pagination,',
    '        showTotal: total => `共 ${total} 条`,',
    '      }}',
    '      loading={props.loading}',
    '      scroll={{ x: 1000 }}',
    '      rowKey="errorId"',
    '      columns={columns}',
    '      rowSelection={rowSelection}',
    '      dataSource={props.tableData}',
    '      onChange={props.onChange}',
    '    >',
    '      <ErrorSolvingBtn',
    '        disabled={solvingDisabled}',
    '        items={selectedItem}',
    '        successUpdated={updateErrorSuccess}',
    '      ></ErrorSolvingBtn>',
    '',
    '      <Button',
    '        disabled={collectDisabled}',
    '        onClick={() =>',
    '          handleCollect(',
    '            selectedItem.map(v => ({ errorId: v.errorId, projectId: v.projectId })),',
    '            true,',
    '          )',
    '        }',
    '        icon={<Icon icon="fillstar" type={ICONTYPE.irregular} size={15} />}',
    '        style={{ marginRight: 10 }}',
    '      >',
    '        收藏',
    '      </Button>',
    '',
    '      <ErrorIgnoreBtn',
    '        disabled={ignoreDisabled}',
    '        items={selectedItem}',
    '        successUpdated={updateErrorSuccess}',
    '      ></ErrorIgnoreBtn>',
    '    </TableWithHeader>',
    '  )',
    '}',
    '',
  ],
  originFileName: 'webpack:///./src/modules/Main/modules/components/ErrorsTable/index.tsx',
  line: 168,
  column: 98,
  name: 'status',
})
sourceMap.set(ErrorDataType.js, {
  originFile: [
    '<template>',
    '  <transition @enter="afterEnter" @before-enter="beforeEnter">',
    '    <div class="move_dot" ref="ball" v-if="show">',
    '      <!-- 小球图片 -->',
    '      <img :src="dropImage" alt="" />',
    '    </div>',
    '  </transition>',
    '</template>',
    '',
    '<script>',
    'export default {',
    "  props: ['dropImage'],",
    '  data() {',
    '    return {',
    '      elLeft: 0,',
    '      elTop: 0,',
    '      show: false // 是否开始起飞',
    '    };',
    '  },',
    '  mounted() {',
    '    this.init();',
    '    // this.elLeft = event.target.getBoundingClientRect().left;',
    '    //     this.elTop = event.target.getBoundingClientRect().top;',
    '    // console.log();',
    '  },',
    '  methods: {',
    '    addToCart(target) {',
    '      const _target = target.$el.getBoundingClientRect();',
    '      this.elLeft = _target.left;',
    '      this.elTop = _target.top;',
    '      this.show = true;',
    '    },',
    '    init() {',
    "      // const target = document.getElementById('buycar');",
    '      // this.elLeft = target.getBoundingClientRect().left;',
    '      // this.elTop = target.getBoundingClientRect().top;',
    '    },',
    '    beforeEnter(el) {',
    '      // 设置transform值',
    '      el.style.transform = `translate3d(0px,0px , 0)`;',
    '      // 设置透明度',
    '      el.style.opacity = 0;',
    '    },',
    '    afterEnter(el) {',
    '      // 获取底部购物车徽标的位置',
    "      const badgePosition = document.getElementById('buycar').getBoundingClientRect();",
    '',
    '      // 设置位移',
    '      el.style.transform = `translate3d(${badgePosition.left -',
    '        this.elLeft -',
    '        badgePosition.height}px,${badgePosition.top - this.elTop - badgePosition.width}px,0) scale(0.2, 0.2)`;',
    '      // 增加贝塞尔曲线',
    '      el.style.webkitTransform = `translate3d(${badgePosition.left -',
    '        this.elLeft -',
    '        badgePosition.height}px,${badgePosition.top - this.elTop - badgePosition.width}px,0) scale(0.2, 0.2)`;',
    '',
    "      el.style.transition = 'transform .6s cubic-bezier(0.3, -0.25, 0.7, -0.15)';",
    "      el.style.transition = 'transform .6s linear';",
    '',
    "      el.style.transition = '-webkit-transform .6s cubic-bezier(0.3, -0.25, 0.7, -0.15)';",
    "      el.style.transition = '-webkit-transform .6s linear';",
    '',
    '      this.show = false;',
    '      // 设置透明度',
    '      el.style.opacity = 1;',
    '      // 监听小球动画结束方法',
    "      el.addEventListener('transitionend', () => {",
    "        el.style.display = 'none';",
    '        this.listenInCart();',
    '      });',
    "      el.addEventListener('webkitAnimationEnd', () => {",
    "        el.style.display = 'none';",
    '        this.listenInCart();',
    '      });',
    '    },',
    '    listenInCart() {',
    '      // 拿到购物车的DOM添加class',
    "      document.getElementById('buycar').classList.add('moveToCart');",
    '      setTimeout(() => {',
    '        // 500毫秒后移除class',
    "        document.getElementById('buycar').classList.remove('moveToCart');",
    '      }, 500);',
    '    }',
    '  }',
    '};',
    '</script>',
    '',
    '<style lang="less" scoped>',
    '.move_dot {',
    '  img {',
    '    width: 72px;',
    '    height: 72px;',
    '  }',
    '}',
    '</style>',
    '',
  ],
  originFileName: 'webpack:///src/pages/drugVenue/components/flyProduct.vue',
  line: 81,
  column: 42,
  name: 'classList',
})

export const recordDataMap = new Map()
recordDataMap.set(ErrorDataType.vue, {
  ossUrls: ['https://public-mito.oss-cn-hangzhou.aliyuncs.com/264174268_10138869'],
})
recordDataMap.set(ErrorDataType.react, {
  ossUrls: [],
})
recordDataMap.set(ErrorDataType.js, {
  ossUrls: [],
})
recordDataMap.set(ErrorDataType.mini, {
  ossUrls: [],
})
