{"version":3,"sources":["webpack:///./src/modules/Main/modules/Team/TeamDetail/views/index.module.less","webpack:///./src/components/EditCard/components/HoverCard/index.tsx","webpack:///./src/components/EditCard/index.tsx","webpack:///./src/modules/Main/modules/Team/TeamDetail/components/AddTeamMember.tsx","webpack:///./src/modules/Main/modules/Team/TeamDetail/components/ModalEditTeam.tsx","webpack:///./src/modules/Main/modules/Team/TeamDetail/views/TeamDetail.tsx","webpack:///./src/modules/Main/modules/Team/services/index.ts","webpack:///./src/components/EditCard/index.module.less","webpack:///./src/components/EditCard/components/HoverCard/index.module.less"],"names":["module","exports","HoverCard","height","children","className","styles","style","EditCard","title","text","btnTxt","btnCb","props","fontWeight","fontSize","type","onClick","e","Option","AddTeamMember","visible","close","getTeamUserList","id","useParams","teamId","Number","useState","options","setOptions","selectOptions","setSelectOptions","handleOk","addTeamMemberFetch","userIds","map","item","value","res","message","success","handleSearch","fuzzyName","userFuzzySearchFetch","fetchSearch","debounce","okButtonProps","disabled","length","onOk","onCancel","okText","span","size","mode","labelInValue","optionLabelProp","allowClear","placeholder","filterOption","onSearch","onChange","option","width","d","key","userId","label","name","email","mobile","ModalEditTeamName","ref","teamName","dingtalkRobot","fetchData","formRef","useRef","setVisible","current","submit","handleForm","values","putTeamInfoFetch","showModal","data","useImperativeHandle","resetFields","cancelText","onFinish","labelAlign","labelCol","wrapperCol","initialValues","Item","rules","required","max","forwardRef","CardConfigData","TeamDetail","modalRef","roleModalRef","modalShow","setModalShow","cardConfig","setCardConfig","teamInfo","setTeamInfo","curUser","setCurUser","meRole","setMeRole","useSWR","teamUserListFetch","teamUserList","mutate","error","useEffect","Array","isArray","me","find","isMe","role","getTeamInfo","teamInfoFetch","createdAt","updatedAt","formatTime","deleteTeamUser","deleteTeamUserFetch","onConfirmDelete","columns","render","row","userName","marginLeft","color","THEMECOLORS","blue","dataIndex","TeamRoleMap","record","removeOther","onClickChangeRole","onConfirm","danger","removeMe","ModalEditTeam","RoleAssign","params","putRoleFetch","putUserRole","isTeam","curUserInfo","push","CardWrapper","index","pull","paddingRight","bordered","rowKey","dataSource","pagination","hideOnSinglePage","teamListFetch","request","get","switchCurrentTeamIdFetch","put","post","addTeamFetch"],"mappings":"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","file":"js/Team Detail.612112a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"teamManagement\":\"teamManagement--3lpsKP\"};","import React from 'react'\nimport { Row, Col, Table, Tag, Space, Button } from 'antd'\n\nimport * as styles from './index.module.less'\nexport interface IHoverCard {\n  height?: number\n  children?: JSX.Element\n}\n\n/**\n * hover 有阴影的卡片\n * @params height 高度\n */\nexport default function HoverCard({ height, children }: IHoverCard) {\n  return (\n    <div className={styles.HoverCard} style={{ height: height ? `${height}px` : '' }}>\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Row, Col, Table, Tag, Space, Button } from 'antd'\n\nimport * as styles from './index.module.less'\nimport HoverCard, { IHoverCard } from './components/HoverCard'\n\nexport interface IEditCard extends IHoverCard {\n  title?: string\n  text?: string\n  btnTxt?: string\n  btnCb?: (e) => any\n}\n\nexport default function EditCard({ title, text, btnTxt, btnCb, ...props }: IEditCard) {\n  return (\n    <HoverCard {...props}>\n      <div className={styles.editWrapper}>\n        <span style={{ fontWeight: 500, fontSize: '14px' }}>{title}</span>\n        <div className={styles.content}>\n          <span className={styles.txt}>{text}</span>\n          {btnTxt && (\n            <Button className={styles.btn} type=\"link\" onClick={e => btnCb(e)}>\n              {btnTxt}\n            </Button>\n          )}\n        </div>\n      </div>\n    </HoverCard>\n  )\n}\n","import { Row, Col, Modal, Input, AutoComplete, Button, Popconfirm, message, Select } from 'antd'\nimport React, { useMemo, useState } from 'react'\nimport { PoweroffOutlined, SearchOutlined } from '@ant-design/icons'\nimport debounce from 'lodash/debounce'\nimport { addTeamMemberFetch, userFuzzySearchFetch } from '../../services'\nimport { useParams } from 'react-router-dom'\nconst { Option } = Select\n\nexport default function AddTeamMember({\n  visible,\n  close,\n  getTeamUserList,\n}: {\n  visible: boolean\n  close: Function\n  getTeamUserList: Function\n}) {\n  const { id } = useParams<{ id: string }>()\n  const teamId = Number(id)\n  const [options, setOptions] = useState<AUserSearch.Response>([])\n  const [selectOptions, setSelectOptions] = useState([])\n  const handleOk = async () => {\n    const res = await addTeamMemberFetch({\n      teamId,\n      userIds: selectOptions.map(item => item.value),\n    })\n    message.success(res.message)\n    getTeamUserList()\n    close()\n  }\n  const handleCancel = () => {\n    close()\n  }\n  const handleSearch = async (fuzzyName: string) => {\n    const res = await userFuzzySearchFetch({ fuzzyName })\n    setOptions(res)\n  }\n  const fetchSearch = debounce(handleSearch, 400)\n  const handleChange = (value, option) => {\n    setSelectOptions(value)\n  }\n  return (\n    <Modal\n      title=\"添加新成员\"\n      okButtonProps={{ disabled: selectOptions.length === 0 }}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      visible={visible}\n      okText={'添加'}\n    >\n      <div>\n        <Row>\n          <Col span={24}>\n            <Select\n              size=\"large\"\n              mode=\"multiple\"\n              labelInValue\n              value={selectOptions}\n              optionLabelProp=\"label\"\n              allowClear\n              placeholder=\"请输入用户名或者email\"\n              filterOption={false}\n              onSearch={fetchSearch}\n              onChange={handleChange}\n              style={{ width: '100%' }}\n            >\n              {options.map(d => (\n                <Option key={d.userId} value={d.userId} label={d.name}>\n                  {d.name} {d.email} {d.mobile}\n                </Option>\n              ))}\n            </Select>\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  )\n}\n","import { Form, Input, message, Modal, Table } from 'antd'\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react'\nimport { putTeamInfoFetch } from '../../services'\n\nfunction ModalEditTeamName(props: any, ref) {\n  const { teamName, teamId, dingtalkRobot, fetchData } = props\n  const formRef = useRef(null)\n  const [visible, setVisible] = useState(false)\n  const onOk = async () => {\n    formRef.current.submit()\n  }\n  const handleForm = async values => {\n    const res = await putTeamInfoFetch(teamId, {\n      ...values,\n    })\n    message.success(res.message)\n    setVisible(false)\n    fetchData()\n  }\n  const showModal = data => setVisible(data)\n  useImperativeHandle(ref, () => {\n    return {\n      showModal,\n    }\n  })\n  const formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 },\n  }\n  return (\n    <Modal\n      onCancel={() => {\n        formRef.current.resetFields()\n        showModal(false)\n      }}\n      onOk={onOk}\n      visible={visible}\n      title=\"编辑团队信息\"\n      okText=\"确认\"\n      cancelText=\"取消\"\n    >\n      <Form\n        ref={formRef}\n        onFinish={handleForm}\n        labelAlign=\"right\"\n        {...formItemLayout}\n        initialValues={{ teamName, dingtalkRobot }}\n        name=\"edit-basic\"\n      >\n        <Form.Item\n          label=\"团队名称\"\n          name=\"teamName\"\n          rules={[{ required: true, type: 'string', max: 20, message: '请输入团队名称' }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"钉钉通知地址\"\n          name=\"dingtalkRobot\"\n          rules={[{ required: true, message: '请输入团队钉钉通知地址' }]}\n        >\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default forwardRef(ModalEditTeamName)\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Row, Col, Table, Tag, Space, Modal, Input, Button, Popconfirm, message, Tooltip } from 'antd'\n\nimport * as styles from './index.module.less'\nimport CardWrapper from '@/components/CardWrapper'\nimport EditCard, { IEditCard } from '@/components/EditCard'\nimport { deleteTeamUserFetch, putUserRole, teamInfoFetch, teamUserListFetch } from '../../services'\nimport { useParams } from 'react-router-dom'\nimport { TeamRoleMap, THEMECOLORS } from '@/common/constant'\nimport AddTeamMember from '../components/AddTeamMember'\nimport useSWR from 'swr'\nimport { formatTime } from '@/utils'\nimport ModalEditTeamName from '../components/ModalEditTeam'\nimport RoleAssign from '../../../components/RoleAssign'\n\nconst CardConfigData = [\n  {\n    height: 70,\n    title: '团队名称',\n    text: '横向中台小组',\n  },\n  {\n    height: 70,\n    title: '钉钉通知地址',\n    text: 'dingtalk：~~',\n  },\n  {\n    height: 70,\n    title: '更新时间',\n    text: '2020-09-01 12:12:00',\n  },\n  {\n    height: 70,\n    title: '创建时间',\n    text: '2020-09-01 12:12:00',\n  },\n]\n\nexport default function TeamDetail() {\n  const { id } = useParams<{ id: string }>()\n  const teamId = Number(id)\n  const modalRef = useRef(null)\n  const roleModalRef = useRef(null)\n  const [modalShow, setModalShow] = useState(false)\n  const [cardConfig, setCardConfig] = useState(CardConfigData)\n  const [teamInfo, setTeamInfo] = useState({})\n  const [curUser, setCurUser] = useState<ATeamUserList.TTeamUserListItem | any>({})\n  const [meRole, setMeRole] = useState(0)\n  const swrTeamListFetch = () => teamUserListFetch(teamId)\n  const { data: teamUserList, error, mutate } = useSWR('getTeamUserList', swrTeamListFetch)\n  useEffect(() => {\n    if (Array.isArray(teamUserList) && teamUserList.length > 0) {\n      const me = teamUserList.find(item => item.isMe)\n      if (me) {\n        setMeRole(me.role)\n      }\n    }\n  }, [teamUserList])\n  const getTeamInfo = async () => {\n    const res = await teamInfoFetch(teamId)\n    const { teamName, dingtalkRobot, createdAt, updatedAt } = res\n    cardConfig[0].text = teamName\n    cardConfig[1].text = dingtalkRobot\n    cardConfig[2].text = formatTime(updatedAt)\n    cardConfig[3].text = formatTime(createdAt)\n    setCardConfig(cardConfig)\n    setTeamInfo(res)\n  }\n  const deleteTeamUser = async (userId: number) => {\n    const res = await deleteTeamUserFetch({\n      userId,\n      teamId,\n    })\n    message.success(res.message)\n    mutate()\n  }\n  useEffect(() => {\n    getTeamInfo()\n  }, [])\n\n  const onConfirmDelete = (userId: number) => {\n    deleteTeamUser(userId)\n  }\n  const onClickChangeRole = (record: any) => {\n    setCurUser(record)\n    roleModalRef.current.showModal(true)\n  }\n  const columns = [\n    {\n      title: '姓名',\n      key: 'userName',\n      width: 160,\n      render: row => (\n        <div>\n          <span>{row.userName}</span>\n          {row.isMe ? (\n            <Tag style={{ marginLeft: '10px' }} color={THEMECOLORS.blue}>\n              当前账号\n            </Tag>\n          ) : (\n            ''\n          )}\n        </div>\n      ),\n    },\n    {\n      title: '角色',\n      dataIndex: 'role',\n      key: 'role',\n      render: role => <Tag>{TeamRoleMap[role]}</Tag>,\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: '加入时间',\n      key: 'createdAt',\n      dataIndex: 'createdAt',\n      render: createdAt => <div>{formatTime(createdAt)}</div>,\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (text, record: ATeamUserList.TTeamUserListItem) => {\n        const removeOther =\n          meRole < record.role ? (\n            <Space size=\"middle\">\n              <Button onClick={() => onClickChangeRole(record)}>更改角色</Button>\n              <Popconfirm\n                onConfirm={() => onConfirmDelete(record.userId)}\n                title={`确定将\"${record.userName}\"移出该团队吗？`}\n                okText=\"移出\"\n                cancelText=\"取消\"\n              >\n                <Button danger>移出</Button>\n              </Popconfirm>\n            </Space>\n          ) : (\n            ''\n          )\n        const removeMe =\n          record.role === 1 ? (\n            <Tooltip title=\"你是team leader，请先指派另一位成员为team leader\">\n              <Button disabled danger>\n                退出团队\n              </Button>\n            </Tooltip>\n          ) : (\n            <Space size=\"middle\">\n              <Popconfirm\n                onConfirm={() => onConfirmDelete(record.userId)}\n                title={`确定要推出该团队吗？`}\n                okText=\"退出团队\"\n                cancelText=\"取消\"\n              >\n                <Button danger>退出团队</Button>\n              </Popconfirm>\n            </Space>\n          )\n        return record.isMe ? removeMe : removeOther\n      },\n    },\n  ]\n  return (\n    <div className={styles.teamManagement}>\n      <AddTeamMember visible={modalShow} getTeamUserList={mutate} close={() => setModalShow(false)}></AddTeamMember>\n      <ModalEditTeamName ref={modalRef} {...teamInfo} fetchData={getTeamInfo}></ModalEditTeamName>\n      <RoleAssign\n        ref={roleModalRef}\n        params={{ teamId, userId: curUser.userId }}\n        putRoleFetch={putUserRole}\n        meRole={meRole}\n        fetchData={mutate}\n        isTeam={true}\n        curUserInfo={curUser}\n      ></RoleAssign>\n      <Row>\n        <Col span={8} push={16}>\n          <CardWrapper\n            title={'团队信息'}\n            btnTxt={'编辑团队信息'}\n            btnCb={() => {\n              modalRef.current.showModal(true)\n            }}\n          >\n            {cardConfig.map(({ height, title, text }, index) => (\n              <EditCard height={height} title={title} text={text} key={index} />\n            ))}\n          </CardWrapper>\n        </Col>\n        <Col span={16} pull={8} style={{ paddingRight: 20 }}>\n          <CardWrapper\n            title={'团队成员列表'}\n            btnTxt={'添加新成员'}\n            btnCb={() => {\n              setModalShow(true)\n            }}\n          >\n            <Table\n              bordered\n              rowKey=\"userId\"\n              columns={columns}\n              dataSource={teamUserList}\n              pagination={{ hideOnSinglePage: true }}\n            />\n          </CardWrapper>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import request from '@/services/request'\n\n/**\n * 团队列表获取\n */\nexport const teamListFetch = () => request.get<null, ATeamList.Response>('/team/list')\n\n/**\n * 切换当前选中的团队id\n * @param teamId 团队id\n */\nexport const switchCurrentTeamIdFetch = (teamId: number) =>\n  request.put<null, Common.CommonMessage>(`/user/selected/teamId/${teamId}`)\n\n/**\n * 团队成员列表获取\n */\nexport const teamUserListFetch = (teamId: number) =>\n  request.get<null, ATeamUserList.Response>(`/team/user/list/teamId/${teamId}`)\n\n/**\n * 删除团队成员\n */\nexport const deleteTeamUserFetch = (params: ATeamUserDelete.Request) =>\n  request.delete<null, ATeamUserDelete.Response>(`/team/user`, { data: params })\n\n/**\n * 获取团队信息\n */\nexport const teamInfoFetch = (teamId: number) => request.get<null, ATeamInfo.Response>(`/team/teamId/${teamId}`)\n\n/**\n * 根据用户名或者email模糊搜索用户\n * @param params\n */\nexport const userFuzzySearchFetch = (params: AUserSearch.Request) =>\n  request.get<null, AUserSearch.Response>('/user/search', {\n    data: params,\n  })\n\n/**\n * 批量新增团队成员\n * @param params\n */\nexport const addTeamMemberFetch = (params: ATeamAddUser.Request) =>\n  request.post<null, ATeamAddUser.Response>('/team/users', params)\n\n/**\n * 更改团队信息\n * @param teamId 团队id\n */\nexport const putTeamInfoFetch = (teamId: number, params: NTeamPutInfo.Request) =>\n  request.put<null, Common.CommonMessage>(`/team/teamId/${teamId}`, params)\n\n/**\n * 新增团队\n */\nexport const addTeamFetch = (params: NTeamAdd.Request) => request.post<null, Common.CommonMessage>(`/team`, params)\n\n/**\n * 更改团队成员角色\n * @param params\n */\nexport const putUserRole = (params: NTeamPutUserRole.Request) =>\n  request.put<null, Common.CommonMessage>('/team/user/role', params)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editWrapper\":\"editWrapper--3NWMYk\",\"content\":\"content--1gwko1\",\"txt\":\"txt--hAv6XK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HoverCard\":\"HoverCard--21nrRH\",\"hoverCard\":\"HoverCard--21nrRH\"};"],"sourceRoot":""}