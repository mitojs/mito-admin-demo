{"version":3,"sources":["webpack:///./src/modules/Main/modules/Errors/Detail/components/ErrorHeader/components/HeaderLeft.tsx","webpack:///./src/modules/Main/modules/Errors/Detail/components/ErrorHeader/ErrorHeader.tsx","webpack:///./src/modules/Main/modules/Errors/Detail/components/ErrorTabs.tsx","webpack:///./src/modules/Main/modules/Errors/Detail/views/ErrorDetail.tsx","webpack:///./src/modules/Main/modules/Project/modules/Create/components/ChoosePlatform/index.module.less","webpack:///./src/modules/Main/modules/Project/modules/Create/components/SetName/index.module.less","webpack:///./src/modules/Main/modules/Project/modules/Create/components/ChoosePlatform/index.tsx","webpack:///./src/modules/Main/modules/Project/modules/Create/components/SetName/index.tsx","webpack:///./src/services/project.ts","webpack:///./src/modules/Main/modules/Project/modules/Create/views/index.tsx","webpack:///./src/services/team.ts","webpack:///./src/modules/Main/modules/Project/modules/Create/views/code.ts","webpack:///./src/modules/Main/modules/Project/modules/Create/views/index.module.less"],"names":["SpanLabel","styled","span","Paragraph","ParagraphWrap","FlexBlock","div","FlexEnd","HeaderLeft","props","errorInfo","successUpdated","handleCollect","items","isCollect","collectErrorsFetch","res","message","success","ErrorOperate","useMemo","ErrorSolve","errorId","status","title","style","marginRight","ArchiveStar","size","onClick","projectId","ErrorAssign","row","CardWrapper","type","rightRender","className","gutter","flex","ellipsis","name","copyable","text","copyTextSplit","justify","color","ErrorLevelBadgeColor","level","ErrorLevel","ErrorStatusBadgeStatus","ErrorStatus","ErrorRemark","padding","remark","ProjectPlatform","projectName","platform","ErrorHeaderInfo","useState","chartData","setChartData","useRecoilState","atomErrorInfo","setErrorInfo","useRouteParams","fetchChartData","getErrorsChartByErrorId","fetchErrorInfo","getErrorsInfoErrorId","useEffect","lineChartRender","series","eventCount","userSum","forEach","item","push","count","data","loading","length","LineChart","xAxisData","map","v","date","StatisticsNum","num","eventSum","THEMECOLORS","blue","trackerSum","red","TabPane","TabsWrap","ErrorQueryType","label","value","icon","EyeOutlined","CameraOutlined","TagsOutlined","ErrorTabs","history","useHistory","useParams","route","useRoute","activeKey","setActiveKey","ossUrlsCount","setOssUrlsCount","useRecoilValue","urls","JSON","parse","ossUrls","Array","isArray","error","console","log","path","split","pop","onChange","key","tab","offset","ErrorDetail","ErrorHeaderRender","ErrorTabsRender","renderRoutes","routes","module","exports","ChoosePlatform","dataList","actived","setActived","itemList","index","styles","join","Icon","ICONTYPE","irregular","CloseCircleOutlined","e","stopPropagation","Option","SetName","hasPlatform","onSumbit","form","useForm","sumbitAble","setsSumbitAble","teamId","teamName","layout","onFinish","values","onFieldsChange","changedFields","allFields","fullInput","every","Item","maxLength","prefix","UserOutlined","placeholder","GitlabOutlined","allowClear","marginLeft","htmlType","disabled","PlainLinkButton","LinkOutlined","window","open","config","insertDoc","addProjctFetch","params","request","post","platformData","CreateProject","currentPlatform","setCurrentPlatform","teamList","setTeamList","sdkCode","setSdkCode","addProject","apikey","uuidv1","git","code","EPlatform","mini","wxMiniSdkCode","vueSdkCode","fetchProjectList","get","renderCodeContainer","CodeContainer","codeString","metastring","Boolean","projectInfo","sdkCdn","fileName","wxMitoSDK","downloadFile"],"mappings":"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","file":"js/Errors Detail.be2cdef8.chunk.js","sourcesContent":["import { ArchiveStar } from '@/components/ArchiveStar'\nimport CardWrapper from '@/components/CardWrapper'\nimport ErrorAssign from '@/modules/Main/modules/components/ErrorAssign'\nimport { Row, Col, Typography, Tooltip, Badge, message } from 'antd'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { collectErrorsFetch } from '@/modules/Main/modules/Errors/services'\nimport { ErrorLevel, ErrorLevelBadgeColor, ErrorStatus, ErrorStatusBadgeStatus } from '@/common/constant'\nimport ProjectPlatform from '@/modules/Main/modules/components/ProjectPlatform'\nimport { ErrorSolveBtns } from '@/modules/Main/modules/components/ErrorSolve'\nimport ErrorRemark from '@/modules/Main/modules/components/ErrorRemark'\nimport { copyTextSplit } from '@/utils'\n\ninterface TPropsType {\n  errorInfo: NErrorInfoByErrorId.Response\n  successUpdated: Function\n}\nconst SpanLabel = styled.span`\n  font-size: 14px;\n  font-weight: 700;\n`\nconst { Paragraph } = Typography\n\nconst ParagraphWrap = styled(Paragraph)`\n  margin-bottom: 0 !important;\n`\nconst FlexBlock = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst FlexEnd = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\nexport default function HeaderLeft(props: TPropsType) {\n  const { errorInfo, successUpdated } = props\n  const handleCollect = async (items: NCollect.item[] = [], isCollect: boolean) => {\n    const res = await collectErrorsFetch({\n      items,\n      isCollect,\n    })\n    message.success(res.message)\n    successUpdated()\n  }\n  const ErrorOperate = useMemo(\n    () => (\n      <FlexBlock>\n        <ErrorSolveBtns\n          errorId={errorInfo.errorId}\n          status={errorInfo.status}\n          successUpdated={successUpdated}\n        ></ErrorSolveBtns>\n        <Tooltip title=\"收藏\">\n          <div style={{ marginRight: '10px' }}>\n            <ArchiveStar\n              status={errorInfo.isCollect}\n              size={24}\n              onClick={() =>\n                handleCollect([{ errorId: errorInfo.errorId, projectId: errorInfo.projectId }], !errorInfo.isCollect)\n              }\n            />\n          </div>\n        </Tooltip>\n        <ErrorAssign row={errorInfo}></ErrorAssign>\n      </FlexBlock>\n    ),\n    [errorInfo],\n  )\n  return (\n    <CardWrapper title={errorInfo.type} rightRender={() => ErrorOperate}>\n      <div>\n        <Row className=\"no-wrap-row\" gutter={[0, 2]}>\n          <Col flex=\"50px\">\n            <SpanLabel>Name：</SpanLabel>\n          </Col>\n          <Col flex=\"auto\">\n            <ParagraphWrap ellipsis>{errorInfo.name}</ParagraphWrap>\n          </Col>\n        </Row>\n        <Row className=\"no-wrap-row\" gutter={[0, 2]}>\n          <Col flex=\"75px\">\n            <SpanLabel>Message：</SpanLabel>\n          </Col>\n          <Col flex=\"auto\">\n            <ParagraphWrap ellipsis copyable={{ text: copyTextSplit(errorInfo.message || '') }}>\n              {errorInfo.message}\n            </ParagraphWrap>\n          </Col>\n        </Row>\n        <Row justify=\"start\">\n          <Col flex=\"110px\">\n            <SpanLabel>等级：</SpanLabel>\n            <Badge status=\"processing\" color={ErrorLevelBadgeColor[errorInfo.level]} />\n            {ErrorLevel[errorInfo.level]}\n          </Col>\n          <Col flex=\"120px\">\n            <SpanLabel>状态：</SpanLabel>\n            <Badge status={ErrorStatusBadgeStatus[errorInfo.status]} />\n            {ErrorStatus[errorInfo.status]}\n          </Col>\n          <Col flex=\"auto\">\n            <ErrorRemark\n              style={{ padding: '0 11px' }}\n              errorId={errorInfo.errorId}\n              remark={errorInfo.remark}\n            ></ErrorRemark>\n          </Col>\n          <Col flex=\"160px\">\n            <FlexEnd>\n              <ProjectPlatform projectName={errorInfo.projectName} platform={errorInfo.platform}></ProjectPlatform>\n            </FlexEnd>\n          </Col>\n        </Row>\n      </div>\n    </CardWrapper>\n  )\n}\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { Badge, Col, message, Row, Tooltip, Typography } from 'antd'\nimport LineChart from '@components/LineChart'\nimport useRouteParams from '@/components/useRouteParams'\nimport { THEMECOLORS } from '@/common/constant'\nimport CardWrapper from '@/components/CardWrapper'\nimport StatisticsNum from '@/components/StatisticsNum'\nimport { getErrorsChartByErrorId, getErrorsInfoErrorId } from '../../services'\nimport HeaderLeft from './components/HeaderLeft'\nimport { useRecoilState } from 'recoil'\nimport { atomErrorInfo } from '@/recoil'\n\nexport default function ErrorHeaderInfo() {\n  const [chartData, setChartData] = useState<IErrorChartByErrorId.Response>([])\n  // const [errorInfo, setErrorInfo] = useState<NErrorInfoByErrorId.Response | any>({\n  //   eventSum: 0,\n  //   trackerSum: 0,\n  //   userName: '',\n  // })\n  const [errorInfo, setErrorInfo] = useRecoilState<any>(atomErrorInfo)\n  const [errorId] = useRouteParams()\n  const fetchChartData = async () => {\n    const res = await getErrorsChartByErrorId(errorId)\n    setChartData(res)\n  }\n  const fetchErrorInfo = async () => {\n    const res = await getErrorsInfoErrorId(errorId)\n    setErrorInfo(res)\n  }\n  const successUpdated = () => {\n    fetchErrorInfo()\n  }\n  useEffect(() => {\n    fetchChartData()\n    fetchErrorInfo()\n  }, [errorId])\n  const lineChartRender = useMemo(() => {\n    const series = []\n    const eventCount = []\n    const userSum = []\n    chartData.forEach(item => {\n      eventCount.push(item.count)\n      userSum.push(item.userSum)\n    })\n    series.push({\n      name: '事件数',\n      data: eventCount,\n    })\n    series.push({\n      name: '用户数',\n      data: userSum,\n    })\n    return (\n      <CardWrapper loading={chartData.length === 0} title=\"事件曲线图\">\n        <LineChart series={series} xAxisData={chartData.map(v => v.date)}></LineChart>\n      </CardWrapper>\n    )\n  }, [chartData])\n  return (\n    <>\n      <Row className=\"no-wrap-row\" gutter={[20, 20]}>\n        <Col flex=\"auto\">\n          <HeaderLeft errorInfo={errorInfo} successUpdated={successUpdated}></HeaderLeft>\n        </Col>\n        <Col flex=\"162px\">\n          <CardWrapper title=\"事件数\">\n            <StatisticsNum num={errorInfo.eventSum} color={THEMECOLORS.blue}></StatisticsNum>\n          </CardWrapper>\n        </Col>\n        <Col flex=\"162px\">\n          <CardWrapper title=\"用户数\">\n            <StatisticsNum num={errorInfo.trackerSum} color={THEMECOLORS.red}></StatisticsNum>\n          </CardWrapper>\n        </Col>\n      </Row>\n      {lineChartRender}\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport * as styles from './index.module.less'\nimport { Affix, Badge, Tabs } from 'antd'\nimport { TableOutlined, EyeOutlined, CameraOutlined, TagsOutlined } from '@ant-design/icons'\n\nimport { useHistory } from 'react-router'\nimport { useParams } from 'react-router-dom'\nimport useRoute from '@/hooks/useRoute'\nimport styled from 'styled-components'\nimport { useRecoilValue } from 'recoil'\nimport { atomErrorInfo } from '@/recoil'\nconst { TabPane } = Tabs\nconst TabsWrap = styled(Tabs)`\n  background-color: white;\n  margin-top: 20px;\n  border-radius: 10px 10px 0 0;\n  padding: 0px 20px 0px 20px;\n  .ant-tabs-nav {\n    margin: 0;\n    position: relative;\n    top: 1px;\n  }\n  .ant-tabs-ink-bar {\n    bottom: 1px !important;\n  }\n`\nconst ErrorQueryType = [\n  {\n    label: '详细信息',\n    value: 'info',\n    icon: <EyeOutlined />,\n  },\n  {\n    label: '录制回放',\n    value: 'replay',\n    icon: <CameraOutlined />,\n  },\n  // {\n  //   label: '事件列表',\n  //   value: 'table',\n  //   icon: <TableOutlined />,\n  // },\n  {\n    label: '标签集合',\n    value: 'tag',\n    icon: <TagsOutlined />,\n  },\n]\n\nexport default function ErrorTabs() {\n  const history = useHistory()\n  const { errorId } = useParams<{ errorId: string }>()\n  const route = useRoute()\n  const [activeKey, setActiveKey] = useState(null)\n  const [ossUrlsCount, setOssUrlsCount] = useState(0)\n\n  const errorInfo = useRecoilValue<any>(atomErrorInfo)\n  useEffect(() => {\n    try {\n      const urls = JSON.parse(errorInfo.ossUrls)\n      setOssUrlsCount(Array.isArray(urls) ? urls.length : 0)\n    } catch (error) {\n      console.log('json parse ossUrls 出错')\n    }\n  }, [errorInfo])\n  useEffect(() => {\n    setActiveKey(route.path.split('/').pop())\n  }, [route])\n  function onChangeTabs(activeKey) {\n    history.push(`/errors/${errorId}/${activeKey}`)\n    setActiveKey(activeKey)\n  }\n\n  return (\n    <TabsWrap activeKey={activeKey} onChange={onChangeTabs}>\n      {ErrorQueryType.map(v => (\n        <TabPane\n          key={v.value}\n          tab={\n            <Badge count={v.value === 'replay' ? ossUrlsCount : 0} offset={[2, -2]}>\n              <span>\n                {v.icon}\n                {v.label}\n              </span>\n            </Badge>\n          }\n        />\n      ))}\n    </TabsWrap>\n\n    // </Affix>\n  )\n}\n","import React, { useMemo } from 'react'\nimport ErrorHeader from '../components/ErrorHeader/ErrorHeader'\nimport ErrorTabs from '../components/ErrorTabs'\nimport { renderRoutes } from 'react-router-config'\n\nexport default function ErrorDetail(props) {\n  const ErrorHeaderRender = useMemo(() => <ErrorHeader />, [])\n  const ErrorTabsRender = useMemo(() => <ErrorTabs />, [])\n  return (\n    <div>\n      {ErrorHeaderRender}\n      {ErrorTabsRender}\n      {renderRoutes(props.route.routes)}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contain\":\"contain--rkFeAG\",\"item\":\"item--30gkoK\",\"active\":\"active--2EAZzF\",\"close\":\"close--1l0fN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-content\":\"form-content--x9SZGM\",\"formContent\":\"form-content--x9SZGM\",\"form-item\":\"form-item--2mcRMb\",\"formItem\":\"form-item--2mcRMb\"};","import React, { useState } from 'react'\nimport { Button } from 'antd'\nimport { CloseCircleOutlined } from '@ant-design/icons'\nimport * as styles from './index.module.less'\nimport Icon from '@/components/Icon'\nimport { ICONTYPE } from '@/common/constant'\n\nexport default function ChoosePlatform({ dataList, onChange }) {\n  const [actived, setActived] = useState(-1)\n  const itemList = dataList.map((item, index) => (\n    <div\n      className={[styles.item, index == actived ? styles.active : ''].join(' ')}\n      onClick={() => {\n        setActived(index)\n        onChange(item.platform)\n      }}\n      key={index}\n    >\n      <Icon icon={item.icon} type={ICONTYPE.irregular} size={56}></Icon>\n      <h3>{item.name}</h3>\n      {index == actived && (\n        <Button\n          type=\"text\"\n          icon={<CloseCircleOutlined />}\n          className={styles.close}\n          onClick={e => {\n            setActived(-1)\n            onChange(0)\n            e.stopPropagation()\n          }}\n        ></Button>\n      )}\n    </div>\n  ))\n  return <div className={styles.contain}>{itemList}</div>\n}\n","import React, { useState, useEffect } from 'react'\nimport { Form, Input, Button, Select } from 'antd'\nimport { UserOutlined, GitlabOutlined, LinkOutlined } from '@ant-design/icons'\n\nimport * as styles from './index.module.less'\nimport PlainLinkButton from '@/components/PlainLinkButton'\nimport config from '@/config'\nconst { Option } = Select\nexport default function SetName({ dataList, hasPlatform, onSumbit }) {\n  const [form] = Form.useForm()\n  const [sumbitAble, setsSumbitAble] = useState(false)\n  const onFinish = values => {\n    onSumbit(values)\n  }\n  const onFieldsChange = (changedFields, allFields) => {\n    const fullInput = allFields.every(item => {\n      if (item.value) return true\n    })\n    setsSumbitAble(fullInput)\n  }\n  const itemList = dataList.map((item, index) => (\n    <Option value={item.teamId} key={index}>\n      {item.teamName}\n    </Option>\n  ))\n\n  return (\n    <Form form={form} name=\"create-project\" layout=\"vertical\" onFinish={onFinish} onFieldsChange={onFieldsChange}>\n      <div className={styles.formContent}>\n        <Form.Item name=\"projectName\" label=\"项目名称\" className={styles.formItem}>\n          <Input maxLength={12} prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"请输入项目名\" />\n        </Form.Item>\n        <Form.Item name=\"git\" label=\"项目git地址\" className={styles.formItem}>\n          <Input prefix={<GitlabOutlined className=\"site-form-item-icon\" />} placeholder=\"请输入项目git地址\" />\n        </Form.Item>\n        <Form.Item name=\"teamId\" label=\"团队\" className={styles.formItem}>\n          <Select allowClear placeholder=\"请选择所属团队\">\n            {itemList}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\" \" style={{ marginLeft: '10px' }}>\n          <Button type=\"primary\" htmlType=\"submit\" disabled={!(sumbitAble && hasPlatform)}>\n            创建项目\n          </Button>\n        </Form.Item>\n        <Form.Item label=\" \">\n          <PlainLinkButton icon={<LinkOutlined />} onClick={() => window.open(config.insertDoc)}>\n            接入指南\n          </PlainLinkButton>\n        </Form.Item>\n      </div>\n    </Form>\n  )\n}\n","import { NAddProject } from '@/d.ts/project'\nimport request from '@/services/request'\n\nexport const addProjctFetch = (params: NAddProject.Request) => request.post<null, string>('/project/add', params)\n","import React, { useEffect, useState } from 'react'\nimport * as styles from './index.module.less'\n\nimport ChoosePlatform from '../components/ChoosePlatform'\nimport SetName from '../components/SetName'\nimport { GlobalProjectList } from '@/d.ts/project'\nimport CodeContainer from '@/components/CodeContainer'\nimport { vueSdkCode, wxMiniSdkCode } from './code'\nimport { getTeamList } from '@/services/team'\nimport { addProjctFetch } from '@/services/project'\nimport { v1 as uuidv1 } from 'uuid'\nimport { message } from 'antd'\nimport CardWrapper from '@/components/CardWrapper'\nimport { EPlatform } from '@/common/constant'\nimport { downloadFile } from '@/utils'\n\nconst platformData = [\n  {\n    icon: 'vue',\n    name: 'vue',\n    platform: 1,\n  },\n  {\n    icon: 'react',\n    name: 'react',\n    platform: 2,\n  },\n  {\n    icon: 'js',\n    name: 'js',\n    platform: 3,\n  },\n  {\n    icon: 'mini',\n    name: 'mini',\n    platform: 4,\n  },\n]\nconst teamData = [\n  {\n    teamId: 1,\n    teamName: '1',\n    role: 1,\n    memberCount: 1,\n    owner: '1',\n    createdAt: '1',\n    selected: 1,\n  },\n]\n\nexport default function CreateProject() {\n  // 当前选中的平台\n  const [currentPlatform, setCurrentPlatform] = useState(0)\n  // 团队列表\n  const [teamList, setTeamList] = useState<GlobalProjectList.Response[]>([])\n  const [sdkCode, setSdkCode] = useState('')\n  const addProject = async values => {\n    const apikey = uuidv1()\n    const params = {\n      apikey,\n      name: values.projectName,\n      platform: currentPlatform,\n      teamId: values.teamId,\n      git: values.git,\n    }\n    const res = await addProjctFetch(params)\n    if (res) {\n      message.success(res)\n      const code = currentPlatform === EPlatform.mini ? wxMiniSdkCode(apikey) : vueSdkCode(apikey)\n      setSdkCode(code)\n    }\n  }\n  const fetchProjectList = async () => {\n    const res = await getTeamList()\n    setTeamList(res)\n  }\n\n  useEffect(() => {\n    fetchProjectList()\n  }, [])\n\n  const renderCodeContainer =\n    sdkCode !== '' ? <CodeContainer codeString={sdkCode} metastring={0}></CodeContainer> : <span></span>\n  return (\n    <CardWrapper title=\"创建项目\">\n      <h1 className={styles.title}>创建一个新的项目</h1>\n      <div className={styles.content}>项目使您能够将错误事件范围精确到项目级别</div>\n      <h1 className={styles.title}>选择一个平台</h1>\n      <ChoosePlatform\n        dataList={platformData}\n        onChange={platform => {\n          setCurrentPlatform(platform)\n        }}\n      ></ChoosePlatform>\n      <h1 className={styles.title}>给你的项目取个名字</h1>\n      <SetName\n        dataList={teamList}\n        hasPlatform={Boolean(currentPlatform)}\n        onSumbit={projectInfo => {\n          addProject(projectInfo)\n        }}\n      />\n      {renderCodeContainer}\n    </CardWrapper>\n  )\n}\n","import { GlobalProjectList } from '@/d.ts/project'\nimport request from '@/services/request'\nexport const getTeamList = () => request.get<null, GlobalProjectList.Response[]>('/team/list')\n","import config from '@/config'\nimport { downloadFile } from '@/utils'\nconst rrWebMito = `<script src=\"https://static.@url.com/f2e/mito/mitoRRweb.min.js\" defer=\"defer\" crossorigin=\"anonymous\"></script>`\nexport function vueSdkCode(apikey: string) {\n  return `\n  // 将以下脚本放入header标签中\n  <script src=\"${config.sdkCdn}\" apikey=\"${apikey}\" customTag=\"\" crossorigin=\"anonymous\"></script>\n  ${rrWebMito}\n  `\n}\n\nexport function wxMiniSdkCode(apikey: string) {\n  const fileName = config.wxMitoSDK.split('/').pop()\n  downloadFile(config.wxMitoSDK, fileName)\n  return `//原生小程序\nimport * as MITO from './${fileName}';\n// 需要将文件的下载移到对应路径\n  MITO.init({\n  apikey: '${apikey}',\n  trackKey: '',\n  // 预定义的枚举值，去接入指南查看对应项目枚举值\n  appId: ''\n});\n\n// uni-app main.js\n// 需要将文件的下载移到对应路径\nimport * as MITO from './${fileName}';\nimport Vue from 'vue';\n\nMITO.init({\n  apikey: '${apikey}',\n  trackKey: '',\n  // 预定义的枚举值，去接入指南查看对应项目枚举值\n  appId: ''\n});\nVue.use(MITO.MitoVue);`\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title--2Jtype\",\"content\":\"content--IL23HV\"};"],"sourceRoot":""}