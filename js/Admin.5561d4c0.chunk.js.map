{"version":3,"sources":["webpack:///./src/modules/Main/modules/Admin/services.ts","webpack:///./src/modules/Main/modules/Admin/components/RunSql.tsx","webpack:///./src/components/DigitalTitle/index.tsx","webpack:///./src/components/LabelValue/index.tsx","webpack:///./src/modules/Main/modules/Admin/components/ShowParams.tsx","webpack:///./src/modules/Main/modules/Admin/components/UserList.tsx","webpack:///./src/modules/Main/modules/Admin/Admin.tsx","webpack:///./src/hooks/useCount/index.tsx"],"names":["putAdminFetch","userId","params","request","put","confirm","postRunSql","sql","post","res","message","success","console","log","error","RunSql","handleOnPressEnter","e","currentTarget","value","isEmpty","title","content","onOk","onCancel","CardWrapper","TextArea","placeholder","style","height","onPressEnter","Container","styled","div","DigitalWrap","theme","colors","blue","TitleWrap","gray","DigitalTitle","props","digital","dititalSize","fontSize","useCount","LabelWrap","span","LabelValue","label","children","ShowParams","useState","slsListLength","corn","handleRedisCount","setParams","getHandleParams","get","useEffect","timer","setInterval","clearInterval","getUseList","pageNum","pageSize","data","UserList","useRequest","current","paginated","defaultPageSize","formatResult","list","total","totalCount","loading","pagination","refresh","setToAdmin","status","columns","dataIndex","width","key","render","isAdmin","row","onConfirm","name","okText","cancelText","danger","rowKey","dataSource","size","tip","spinning","Admin","gutter","flex","config","start","duration","delay","num","useCountUp","end","countUp","update"],"mappings":"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","file":"js/Admin.5561d4c0.chunk.js","sourcesContent":["import request from '@/services/request'\n\nexport const handleParamsFetch = () => request.get<null, NErrorHandleParams.Response>(`/errors/handle/params/`)\nexport const userListFetch = (params: AUserList.Request) =>\n  request.get<null, AUserList.Response>(`/user/list`, {\n    data: params,\n  })\n\nexport const runSqlFetch = (params: { sql: string }) => request.post<null, unknown>(`/user/sql`, params)\n\nexport const putAdminFetch = (userId: number, params: { status: number }) =>\n  request.put<null, Common.CommonMessage>(`/user/admin/userId/${userId}`, params)\n","import CardWrapper from '@/components/CardWrapper'\nimport { isEmpty } from '@/utils'\nimport { Input, message, Modal } from 'antd'\nimport React from 'react'\nimport { runSqlFetch } from '../services'\nconst { confirm } = Modal\n\nconst postRunSql = async (sql: string) => {\n  try {\n    const res = await runSqlFetch({ sql })\n    message.success('sql执行成功，执行结果在控制台')\n    console.log(res)\n  } catch (error) {\n    message.error('sql执行异常')\n  }\n}\nexport default function RunSql() {\n  const handleOnPressEnter = async e => {\n    const sql = e.currentTarget.value\n    if (!isEmpty(sql)) {\n      confirm({\n        title: '执行sql确认',\n        content: `确认执行该sql:${sql}`,\n        onOk() {\n          postRunSql(sql)\n        },\n        onCancel() {\n          //\n        },\n      })\n    }\n  }\n  return (\n    <CardWrapper title=\"sql执行\">\n      <Input.TextArea\n        placeholder=\"请输入sql后按下enter键\"\n        style={{ height: '120px' }}\n        onPressEnter={handleOnPressEnter}\n      ></Input.TextArea>\n    </CardWrapper>\n  )\n}\n","import useCount from '@/hooks/useCount'\nimport React from 'react'\nimport styled from 'styled-components'\n\ntype PropsType = {\n  digital: number\n  title: string\n  dititalSize?: number\n}\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\nconst DigitalWrap = styled.div`\n  color: ${({ theme }) => theme.colors.blue};\n`\nconst TitleWrap = styled.div`\n  color: ${({ theme }) => theme.colors.gray};\n  margin-top: 2px;\n  font-size: 12px;\n`\n\nexport default function DigitalTitle(props: PropsType) {\n  const { digital, title, dititalSize } = props\n  return (\n    <Container>\n      <DigitalWrap style={{ fontSize: `${dititalSize || 22}px` }}>{useCount(digital)}</DigitalWrap>\n      <TitleWrap>{title}</TitleWrap>\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst LabelWrap = styled.span`\n  font-weight: 600;\n  margin-right: 6px;\n`\ntype PropsType = {\n  label: string\n  children?: React.ReactNode\n}\nexport default function LabelValue({ label, children }: PropsType) {\n  return (\n    <div>\n      <LabelWrap>{label}</LabelWrap>\n      {children}\n    </div>\n  )\n}\n","import CardWrapper from '@/components/CardWrapper'\nimport React, { useEffect, useState } from 'react'\nimport { handleParamsFetch } from '../services'\nimport { Col, Row } from 'antd'\nimport DigitalTitle from '@/components/DigitalTitle'\nimport LabelValue from '@/components/LabelValue'\nimport useCount from '@/hooks/useCount'\nexport default function ShowParams() {\n  const [params, setParams] = useState<NErrorHandleParams.Response>({\n    slsListLength: 0,\n    corn: '',\n    handleRedisCount: 0,\n  })\n  const getHandleParams = async () => {\n    const res = await handleParamsFetch()\n    setParams(res)\n  }\n  useEffect(() => {\n    getHandleParams()\n    const timer = setInterval(() => {\n      getHandleParams()\n    }, 60000)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n  return (\n    <CardWrapper title=\"处理队列\">\n      <Row>\n        <Col span={24}>\n          <DigitalTitle dititalSize={36} digital={params.slsListLength} title=\"剩余队列数量\"></DigitalTitle>\n        </Col>\n        <Col span={24}>\n          <Col span={24}>\n            <LabelValue label=\"单次处理数量:\">{useCount(params.handleRedisCount)}</LabelValue>\n          </Col>\n        </Col>\n        <Col span={24}>\n          <LabelValue label=\"定时任务:\">{params.corn}</LabelValue>\n        </Col>\n      </Row>\n    </CardWrapper>\n  )\n}\n","import CardWrapper from '@/components/CardWrapper'\nimport { useRequest } from 'ahooks'\nimport { Button, message, Popconfirm, Table } from 'antd'\nimport React from 'react'\nimport { putAdminFetch, userListFetch } from '../services'\n\nconst getUseList = (pageNum: number, pageSize: number) => {\n  return userListFetch({\n    pageNum,\n    pageSize,\n  })\n}\n\nexport default function UserList() {\n  const { data, loading, pagination, refresh } = useRequest(\n    ({ current: pageNum, pageSize }) => getUseList(pageNum, pageSize),\n    {\n      paginated: true,\n      defaultPageSize: 10,\n      formatResult(res: Common.pageInfo<null>) {\n        return {\n          list: res.list,\n          total: res.totalCount,\n        }\n      },\n    },\n  )\n  const setToAdmin = async (userId: number, status: number) => {\n    const res = await putAdminFetch(userId, { status })\n    message.success(res.message)\n    refresh()\n  }\n  const columns = [\n    {\n      title: '姓名',\n      dataIndex: 'name',\n      width: 100,\n      key: 'name',\n    },\n    {\n      title: '手机号',\n      dataIndex: 'mobile',\n      width: 100,\n      key: 'mobile',\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'email',\n      width: 100,\n      key: 'email',\n    },\n    {\n      title: '超管',\n      dataIndex: 'isAdmin',\n      width: 100,\n      key: 'isAdmin',\n      render: isAdmin => <span>{isAdmin ? '是' : '否'}</span>,\n    },\n    {\n      title: '操作',\n      width: 100,\n      key: 'isAdmin',\n      render: (row: AUserList.ListItem) => (\n        <div>\n          {row.isAdmin ? (\n            <Popconfirm\n              onConfirm={() => setToAdmin(row.userId, 0)}\n              title={`确定移除\"${row.name}\"超管吗？`}\n              okText=\"确认\"\n              cancelText=\"取消\"\n            >\n              <Button danger>移除超管</Button>\n            </Popconfirm>\n          ) : (\n            <Popconfirm\n              onConfirm={() => setToAdmin(row.userId, 1)}\n              title={`确定将\"${row.name}\"置为超管吗？`}\n              okText=\"确认\"\n              cancelText=\"取消\"\n            >\n              <Button>置为超管</Button>\n            </Popconfirm>\n          )}\n        </div>\n      ),\n    },\n  ]\n  return (\n    <CardWrapper title=\"用户列表\">\n      <Table\n        pagination={pagination}\n        rowKey=\"userId\"\n        columns={columns}\n        dataSource={data?.list}\n        loading={{ size: 'large', tip: '用户列表正在加载中...', spinning: loading }}\n      ></Table>\n    </CardWrapper>\n  )\n}\n","import { Col, Row } from 'antd'\nimport React from 'react'\nimport RunSql from './components/RunSql'\nimport ShowParams from './components/ShowParams'\nimport UserList from './components/UserList'\n\nexport default function Admin() {\n  return (\n    <Row gutter={[20, 20]}>\n      <Col flex=\"214px\">\n        <ShowParams></ShowParams>\n      </Col>\n      <Col flex=\"auto\">\n        <RunSql></RunSql>\n      </Col>\n      <Col span={24}>\n        <UserList></UserList>\n      </Col>\n      {/* <div>当前项目活跃成功</div>\n      <div>排行版</div> */}\n    </Row>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useCountUp } from 'react-countup'\nconst config = {\n  start: 0,\n  duration: 1,\n  delay: 0,\n}\nexport default function useCount(num: number) {\n  const { countUp, update } = useCountUp({ end: num, ...config })\n  useEffect(() => {\n    update(num)\n  }, [num])\n  return countUp\n}\n"],"sourceRoot":""}