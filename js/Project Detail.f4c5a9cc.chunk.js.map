{"version":3,"sources":["webpack:///./src/modules/Main/modules/Project/store/action-types.ts","webpack:///./src/modules/Main/modules/Project/store/reducer.ts","webpack:///./src/modules/Main/modules/Project/store/effect.ts","webpack:///./src/modules/Main/modules/Project/modules/Detail/components/ProjectMembers/components/TableTransfer.tsx","webpack:///./src/modules/Main/modules/Project/modules/Detail/components/ProjectMembers/components/TransferMember.tsx","webpack:///./src/modules/Main/modules/Project/modules/Detail/components/ProjectMembers/index.tsx","webpack:///./src/modules/Main/modules/Project/modules/Detail/components/UploadSourcemap.tsx","webpack:///./src/modules/Main/modules/Project/modules/Detail/components/Sourcemap.tsx","webpack:///./src/modules/Main/modules/Project/modules/Detail/components/ProjectBaseInfo/BasicEditor.tsx","webpack:///./src/modules/Main/modules/Project/modules/Detail/components/ProjectBaseInfo/ErrorLevelConfig.tsx","webpack:///./src/modules/Main/modules/Project/modules/Detail/components/ProjectBaseInfo/ProjectBaseInfo.tsx","webpack:///./src/modules/Main/modules/Project/modules/Detail/ProjectDetail.tsx","webpack:///./src/modules/Main/modules/Project/modules/Detail/index.module.less","webpack:///./src/modules/Main/modules/Project/modules/Create/views/code.ts","webpack:///./src/modules/Main/modules/Project/modules/Detail/components/ProjectMembers/index.module.less"],"names":["produce","draft","action","type","payload","types","detail","detailSourceMap","detailMemberList","apiKey","frame","id","platform","memberNum","name","ownerId","ownerName","role","teamId","updateAt","members","createAt","projectList","effects","call","getSourcemap","res","put","createSourcemap","sagasCollectionCreator","TableTransfer","leftColumns","rightColumns","restProps","showSelectAll","direction","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","selectedKeys","listDisabled","disabled","columns","rowSelection","getCheckboxProps","item","onSelectAll","selected","selectedRows","treeSelectedKeys","filter","map","key","diffKeys","_","difference","onSelect","selectedRowKeys","dataSource","size","style","pointerEvents","onRow","itemDisabled","onClick","includes","TransferMember","modalVisible","currentMember","setUpdate","visible","setVisible","useState","setMembers","addUserIds","setAddUserIds","deleteUserIds","setDeleteUserIds","originTargetKeys","targetKeys","setTargetKeys","showSearch","useParams","projectId","Number","currentMemberId","m","userId","useEffect","getTeamMemberListByTeamIdFetch","d","getTeamMemberListByTeamId","leftTableColumns","dataIndex","title","render","record","userName","isMe","TeamRoleMap","confirmUpdate","updateProjectMemberFetch","without","message","success","s","onChange","nextTargetKeys","moveKeys","uniq","centered","onOk","onCancel","width","filterOption","inputValue","indexOf","tag","ProjectMembers","roleModalRef","useRef","meRole","setMeRole","curUser","setCurUser","update","getProjectMembers","getProjectMembersFetch","me","find","onChangeNotify","status","member","params","notify","putMemberNotifyFetch","onConfirmDelete","deleteMemberFetch","memberColumn","ProjectRoleMap","defaultChecked","removeOther","current","showModal","onConfirm","okText","cancelText","danger","removeMe","extra","className","styles","RoleAssign","ref","putRoleFetch","putUserRole","fetchData","isTeam","curUserInfo","pagination","rowKey","Dragger","UploadSourcemap","props","fileList","setFileLis","trigger","React","cloneElement","uploadProps","method","withCredentials","headers","info","finalFileList","n","length","response","result","InboxOutlined","Text","sourceMapColumn","ellipsis","text","wordWrap","wordBreak","createdAt","formatTime","Date","getTime","Sourcemap","sourcemap","setSourcemap","sourcemapKeyword","setSourcemapKeyword","selectedFiles","setSelectedFiles","fetchSourceMap","fileName","then","confirm","icon","ExclamationCircleOutlined","content","deleteSourcemap","ids","files","items","url","fullPath","bordered","onKeyDown","e","keyCode","currentTarget","value","placeholder","Option","layout","labelCol","span","wrapperCol","platformArr","Object","entries","platformMap","label","BasicEditor","form","useForm","projectName","git","fetchTable","onClickVisible","onHide","validateFields","getFieldsValue","putProjectInfoFetch","defaultTrigger","isValidElement","initialValues","Item","rules","required","defaultProps","previousSelect","ColBorder","styled","ErrorLevelConfig","errorLevelArrState","setErrorLevelArrState","errorLevelArr","errorLevelConfig","callback","data","Array","isArray","config","setFieldsValue","errorType","levels","isEvent","warning","getFieldValue","handleSelectChange","JSON","parse","stringify","useImperativeHandle","resetFields","maskClosable","labelAlign","List","fields","add","remove","field","index","fieldKey","validator","Promise","resolve","preValue","reject","valuePropName","checkedChildren","unCheckedChildren","ShowErrorLevelConfig","gutter","textAlign","level","color","ErrorLevelBadgeColor","forwardRef","Link","Paragraph","SpanWrap","ProjectBaseInfo","fetchProjectInfo","errorLevelConfigModalRef","errorLevelConfigCallback","putProjectErrorLevelConfigFetch","CardWrapper","EditOutlined","href","target","rel","memberCount","updatedAt","display","code","copyable","vueSdkCode","apikey","ProjectDetail","setDetail","dispatch","useDispatch","getProjectInfoByIdFetch","module","exports","sdkCdn","wxMiniSdkCode","wxMitoSDK","split","pop","downloadFile"],"mappings":"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","file":"js/Project Detail.f4c5a9cc.chunk.js","sourcesContent":["export const GET_PROJECT_DETAIL = '项目基本详情'\n\nexport const ASYNC_GET_PROJECT_DETAIL = '拉取项目基本详情'\n\nexport const GET_PROJECT_SOURCEMAP = 'get project source map'\n\nexport const ASYNC_GET_PROJECT_SOURCEMAP = 'fetch project source map'\n\nexport const ASYNC_GET_PROJECT_MEMBER = 'fetch member'\n\nexport const GET_PROJECT_MEMBER = 'get menber'\n\nexport const ASYNC_SET_MEMBER_NOTIFY = '设置成员消息通知'\n\nexport const SET_MEMBER_NOTIFY = 'set notify'\n\nexport const GET_HEADER_PROJECT_LIST = 'get header project'\n\nexport const ASYNC_UPDATE_PROJECT = '更新project'\n\nexport const ASYNC_DELETE_SOURCEMAP = '删除soucemap'\n\nexport const ASYNC_CREATE_SOURCEMAP = '创建sourcemap'\n\nexport default {\n  GET_PROJECT_DETAIL,\n  ASYNC_GET_PROJECT_DETAIL,\n  GET_PROJECT_SOURCEMAP,\n  ASYNC_GET_PROJECT_SOURCEMAP,\n  GET_PROJECT_MEMBER,\n  ASYNC_GET_PROJECT_MEMBER,\n  ASYNC_SET_MEMBER_NOTIFY,\n  SET_MEMBER_NOTIFY,\n  GET_HEADER_PROJECT_LIST,\n  ASYNC_UPDATE_PROJECT,\n  ASYNC_DELETE_SOURCEMAP,\n  ASYNC_CREATE_SOURCEMAP,\n}\n","import { produce } from 'immer'\nimport types from './action-types'\n\nconst initialState = {\n  detail: {\n    apiKey: '',\n    frame: '',\n    id: 0,\n    platform: '',\n    memberNum: 0,\n    name: '',\n    ownerId: 0,\n    ownerName: '',\n    role: 0,\n    teamId: 0,\n    updateAt: 0,\n    members: [],\n    createAt: 0,\n  },\n  detailSourceMap: [],\n  detailMemberList: [],\n  projectList: [],\n}\n\nconst reducer = produce((draft: ProjectState, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case types.GET_PROJECT_DETAIL:\n      draft.detail = payload\n      break\n    case types.GET_PROJECT_SOURCEMAP:\n      draft.detailSourceMap = payload\n      break\n    case types.GET_PROJECT_MEMBER:\n      draft.detailMemberList = payload\n      break\n    default:\n      return draft\n  }\n}, initialState)\n\nexport default reducer\n","import { call, put, take, takeLatest } from 'redux-saga/effects'\n\nimport types, { ASYNC_DELETE_SOURCEMAP, ASYNC_UPDATE_PROJECT, ASYNC_CREATE_SOURCEMAP } from './action-types'\nimport { sagasCollectionCreator, Action } from '@utils/helper'\nimport { createSourcemap, getHeaderProjectList, getSourcemap } from '../services'\nimport { AGetSourcemap } from '@/d.ts/project'\n\ninterface SourceMapAction extends Action {\n  payload: AGetSourcemap.Request\n}\n\nconst effects = {\n  [types.ASYNC_GET_PROJECT_SOURCEMAP]: function* (action: SourceMapAction) {\n    const res = yield call(getSourcemap, action.payload)\n    yield put({ type: types.GET_PROJECT_SOURCEMAP, payload: res as AGetSourcemap.Response })\n  },\n  [ASYNC_CREATE_SOURCEMAP]: function* (action) {\n    yield call(createSourcemap, action.payload)\n  },\n}\n\nexport default sagasCollectionCreator(effects)\n","import React from 'react'\nimport { Modal, Button, Transfer, Switch, Table, Tag } from 'antd'\nimport _ from 'lodash'\n\nexport default function TableTransfer({ leftColumns, rightColumns, ...restProps }) {\n  return (\n    <Transfer {...restProps} showSelectAll={false}>\n      {({\n        direction,\n        filteredItems,\n        onItemSelectAll,\n        onItemSelect,\n        selectedKeys: listSelectedKeys,\n        disabled: listDisabled,\n      }) => {\n        const columns = direction === 'left' ? leftColumns : rightColumns\n\n        const rowSelection = {\n          getCheckboxProps: item => ({ disabled: listDisabled || item.disabled }),\n          onSelectAll(selected, selectedRows) {\n            const treeSelectedKeys = selectedRows.filter(item => !item.disabled).map(({ key }) => key)\n            const diffKeys = selected\n              ? _.difference(treeSelectedKeys, listSelectedKeys)\n              : _.difference(listSelectedKeys, treeSelectedKeys)\n            onItemSelectAll(diffKeys, selected)\n          },\n          onSelect({ key }, selected) {\n            onItemSelect(key, selected)\n          },\n          selectedRowKeys: listSelectedKeys,\n        }\n\n        return (\n          <Table\n            rowSelection={rowSelection}\n            columns={columns}\n            dataSource={filteredItems}\n            size=\"small\"\n            style={{ pointerEvents: listDisabled ? 'none' : null }}\n            onRow={({ key, disabled: itemDisabled }) => ({\n              onClick: () => {\n                if (itemDisabled || listDisabled) return\n                onItemSelect(key, !listSelectedKeys.includes(key))\n              },\n            })}\n          />\n        )\n      }}\n    </Transfer>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Modal, Button, Transfer, Switch, Table, Tag, message } from 'antd'\nimport { getTeamMemberListByTeamIdFetch, updateProjectMemberFetch } from '@/modules/Main/modules/Project/services'\nimport { TeamRoleMap } from '@/common/constant'\nimport TableTransfer from './TableTransfer'\nimport _ from 'lodash'\n\nexport default function TransferMember({ modalVisible, detail, currentMember, setUpdate }) {\n  const [visible, setVisible] = modalVisible // modal\n\n  const [members, setMembers] = useState([]) // dataSource\n  const [addUserIds, setAddUserIds] = useState([]) // 提交添加人员\n  const [deleteUserIds, setDeleteUserIds] = useState([]) // 提交删除人员\n  const [originTargetKeys, setOriginTargetKeys] = useState([]) //\n  const [targetKeys, setTargetKeys] = useState(originTargetKeys) // 添加人员\n  const [disabled, setDisabled] = useState(false)\n  const [showSearch, setShowSearch] = useState(false)\n\n  const params = useParams<{ id: string }>()\n  const { id } = params\n  const projectId = Number(id)\n\n  const currentMemberId = currentMember.map(m => m.userId)\n\n  useEffect(() => {\n    setTargetKeys(currentMemberId)\n  }, [currentMember])\n\n  // 根据 teamID 获取人员列表\n  useEffect(() => {\n    const getTeamMemberListByTeamId = async () => {\n      if (detail.teamId) {\n        const res = await getTeamMemberListByTeamIdFetch(detail.teamId)\n        setMembers(res.map(d => ({ ...d, key: d.userId })))\n      }\n    }\n    getTeamMemberListByTeamId()\n  }, [detail.teamId])\n\n  const leftTableColumns = [\n    {\n      dataIndex: 'userName',\n      title: '用户人',\n      render: (_, record) => {\n        return <span>{record.userName ? record.userName : '' + (record.isMe ? '(You)' : '')}</span>\n      },\n    },\n    {\n      dataIndex: 'email',\n      title: '邮箱📮',\n    },\n    {\n      dataIndex: 'role',\n      title: '团队角色',\n      render: role => <Tag>{TeamRoleMap[role]}</Tag>,\n    },\n  ]\n  const rightTableColumns = [\n    {\n      dataIndex: 'userName',\n      title: '用户人',\n    },\n  ]\n\n  // 提交人员更变\n  const confirmUpdate = async () => {\n    const res = await updateProjectMemberFetch({\n      projectId,\n      deleteUserIds: _.without(deleteUserIds, ...originTargetKeys),\n      addUserIds: _.without(addUserIds, ...currentMemberId),\n    })\n    message.success(res.message)\n    setVisible(false)\n    setUpdate(s => !s)\n  }\n\n  // 更改人员\n  const onChange = async (nextTargetKeys, direction, moveKeys) => {\n    if (direction == 'left') {\n      setAddUserIds(_.without(addUserIds, ...moveKeys)) // 添加\n      setDeleteUserIds(_.uniq([...deleteUserIds, ...moveKeys])) // 删除\n    } else {\n      setAddUserIds(_.uniq([...addUserIds, ...moveKeys])) // 添加\n      setDeleteUserIds(_.without(deleteUserIds, ...moveKeys)) // 删除\n    }\n    setTargetKeys(nextTargetKeys)\n  }\n\n  return (\n    <Modal\n      title=\"更新成员\"\n      centered\n      visible={visible}\n      onOk={confirmUpdate}\n      onCancel={() => setVisible(false)}\n      width={1000}\n    >\n      <TableTransfer\n        dataSource={members || []}\n        targetKeys={targetKeys}\n        disabled={disabled}\n        showSearch={showSearch}\n        onChange={onChange}\n        filterOption={(inputValue, item) =>\n          item.title.indexOf(inputValue) !== -1 || item.tag.indexOf(inputValue) !== -1\n        }\n        leftColumns={leftTableColumns}\n        rightColumns={rightTableColumns}\n      />\n    </Modal>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Button, Card, Popconfirm, Space, Switch, Table, Tag, Tooltip } from 'antd'\nimport * as styles from './index.module.less'\nimport { deleteMemberFetch, getProjectMembersFetch, putMemberNotifyFetch, putUserRole } from '../../../../services'\nimport { useParams } from 'react-router-dom'\nimport { IProjectMemberItem, NProjectMembers } from '@/d.ts/project'\nimport { ProjectRoleMap } from '@/common/constant'\nimport { message } from 'antd'\nimport TransferMember from './components/TransferMember'\nimport RoleAssign from '@/modules/Main/modules/components/RoleAssign'\n\nexport default function ProjectMembers({ detail }) {\n  const params = useParams<{ id: string }>()\n  const { id } = params\n  const projectId = Number(id)\n  const roleModalRef = useRef(null)\n  const [members, setMembers] = useState<NProjectMembers.Response>([])\n  const [meRole, setMeRole] = useState(0)\n  const [curUser, setCurUser] = useState<ATeamUserList.TTeamUserListItem | any>({})\n\n  const [update, setUpdate] = useState(false)\n\n  const modalVisible = useState(false)\n  const getProjectMembers = async () => {\n    const res = await getProjectMembersFetch(projectId)\n    setMembers(res)\n    const me = res.find(item => item.isMe)\n    if (me) {\n      setMeRole(me.role)\n    }\n  }\n  useEffect(() => {\n    getProjectMembers()\n  }, [update])\n  const onChangeNotify = async (status, member: IProjectMemberItem) => {\n    const params = {\n      projectId,\n      notify: Number(status),\n      userId: member.userId,\n    }\n    const res = await putMemberNotifyFetch(params)\n    message.success(res)\n  }\n  const onConfirmDelete = async (userId: number) => {\n    const res = await deleteMemberFetch({\n      userId,\n      projectId,\n    })\n    message.success(res)\n    getProjectMembers()\n  }\n  const onClickChangeRole = (record: any) => {\n    setCurUser(record)\n    roleModalRef.current.showModal(true)\n  }\n  const memberColumn = [\n    {\n      title: '姓名',\n      dataIndex: 'userName',\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'email',\n    },\n    {\n      title: '角色',\n      render(member: IProjectMemberItem) {\n        return <Tag>{ProjectRoleMap[member.role]}</Tag>\n      },\n    },\n    {\n      title: '消息通知',\n      render(member: IProjectMemberItem) {\n        return <Switch onChange={status => onChangeNotify(status, member)} defaultChecked={!!member.notify} />\n      },\n    },\n    {\n      title: '操作',\n      render(member: IProjectMemberItem) {\n        const removeOther =\n          meRole < member.role ? (\n            <Space size=\"middle\">\n              <Button onClick={() => onClickChangeRole(member)}>更改角色</Button>\n\n              <Popconfirm\n                onConfirm={() => onConfirmDelete(member.userId)}\n                title={`确定将\"${member.userName}\"移出该项目吗？`}\n                okText=\"移出\"\n                cancelText=\"取消\"\n              >\n                <Button danger>移出</Button>\n              </Popconfirm>\n            </Space>\n          ) : (\n            ''\n          )\n        const removeMe =\n          member.role === 1 ? (\n            <Tooltip title=\"你是project leader，请先指派另一位成员为project leader\">\n              <Button disabled danger>\n                退出项目\n              </Button>\n            </Tooltip>\n          ) : (\n            <Space size=\"middle\">\n              <Popconfirm\n                onConfirm={() => onConfirmDelete(member.userId)}\n                title={`确定要推出该项目吗？`}\n                okText=\"退出项目\"\n                cancelText=\"取消\"\n              >\n                <Button type=\"link\" danger>\n                  退出项目\n                </Button>\n              </Popconfirm>\n            </Space>\n          )\n        return member.isMe ? removeMe : removeOther\n      },\n    },\n  ]\n  return (\n    <Card\n      extra={\n        <>\n          <span className={styles.editable} onClick={() => modalVisible[1](true)}>\n            添加\n          </span>\n        </>\n      }\n      className={styles.card}\n      title=\"项目成员\"\n    >\n      <RoleAssign\n        ref={roleModalRef}\n        params={{ projectId, userId: curUser.userId }}\n        putRoleFetch={putUserRole}\n        meRole={meRole}\n        fetchData={getProjectMembers}\n        isTeam={true}\n        curUserInfo={curUser}\n      ></RoleAssign>\n      <TransferMember modalVisible={modalVisible} detail={detail} currentMember={members} setUpdate={setUpdate} />\n      <Table dataSource={members} pagination={false} rowKey=\"userId\" columns={memberColumn} />\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { Modal, Upload } from 'antd'\nimport { UploadProps } from 'antd/lib/upload/Upload'\nimport { UploadFile } from 'antd/lib/upload/interface'\nimport { InboxOutlined } from '@ant-design/icons'\n\nconst { Dragger } = Upload\n\ninterface UploadSourcemapProps {\n  trigger: React.ReactElement\n  onConfirm?: (files: UploadFile[]) => unknown\n}\n\nconst UploadSourcemap = (props: UploadSourcemapProps) => {\n  const [visible, setVisible] = useState(false)\n  const [fileList, setFileLis] = useState([])\n\n  const trigger = React.cloneElement(props.trigger, {\n    onClick: () => {\n      setVisible(true)\n      setFileLis([])\n    },\n  })\n\n  const onHide = () => setVisible(false)\n\n  const uploadProps: UploadProps = {\n    name: 'file',\n    method: 'POST',\n    withCredentials: true,\n    headers: {\n      'X-Requested-With': null,\n    },\n    fileList,\n    // 文件上传地址\n    action: '//apigw.@url.com/api/spider-fileupload/1.0/upload',\n    onChange(info) {\n      setFileLis(info.fileList)\n    },\n  }\n\n  const onConfirm = async () => {\n    const finalFileList = fileList.filter(n => n.status === 'done')\n    if (finalFileList.length > 0) {\n      if (typeof props.onConfirm === 'function') {\n        await props.onConfirm(finalFileList.map(n => n.response.result))\n      }\n    }\n    setVisible(false)\n  }\n\n  return (\n    <>\n      {trigger}\n      <Modal title=\"上传source map\" onCancel={onHide} onOk={onConfirm} visible={visible}>\n        <Dragger {...uploadProps}>\n          <p className=\"ant-upload-drag-icon\">\n            <InboxOutlined />\n          </p>\n          <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n          <p className=\"ant-upload-hint\">\n            Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\n          </p>\n        </Dragger>\n      </Modal>\n    </>\n  )\n}\n\nexport default UploadSourcemap\n","import React, { useEffect, useState } from 'react'\nimport * as styles from '../index.module.less'\nimport UploadSourcemap from './UploadSourcemap'\nimport { Card, Input, message, Modal, Table, Typography } from 'antd'\nimport { createSourcemap, deleteSourcemap, getSourcemap } from '@/modules/Main/modules/Project/services'\nimport { EditOutlined, ExclamationCircleOutlined } from '@ant-design/icons'\nimport { formatTime } from '@/utils'\nimport { AGetSourcemap } from '@/d.ts/project'\nimport { useParams } from 'react-router-dom'\n\nconst { Text } = Typography\n\nconst sourceMapColumn = [\n  {\n    title: '文件名',\n    dataIndex: 'fileName',\n    ellipsis: true,\n  },\n  {\n    title: '文件地址',\n    dataIndex: 'url',\n    render: (text: string) => <div style={{ wordWrap: 'break-word', wordBreak: 'break-word' }}>{text}</div>,\n    width: 600,\n  },\n  {\n    title: '上传时间',\n    dataIndex: 'createdAt',\n    render: createdAt => formatTime(new Date(createdAt).getTime()),\n  },\n]\n\nconst Sourcemap = () => {\n  const params = useParams<{ id: string }>()\n  const { id } = params\n  const [sourcemap, setSourcemap] = useState<AGetSourcemap.Response>([])\n  const [sourcemapKeyword, setSourcemapKeyword] = useState('')\n  const [selectedFiles, setSelectedFiles] = useState<number[]>([])\n\n  const fetchSourceMap = () => {\n    getSourcemap({ projectId: +id, fileName: sourcemapKeyword }).then(res => {\n      setSourcemap(res)\n    })\n  }\n\n  const onConfirmUpload = files => {\n    return createSourcemap({\n      items: files.map(({ fileName, fullPath }) => ({ fileName, url: fullPath })),\n      projectId: +id,\n    }).then(() => {\n      message.success('上传成功！')\n      fetchSourceMap()\n    })\n  }\n\n  useEffect(() => {\n    fetchSourceMap()\n  }, [sourcemapKeyword])\n\n  const onSearchSourceMap = e => {\n    if (e.keyCode === 13) {\n      setSourcemapKeyword(e.currentTarget.value)\n    }\n  }\n\n  const onDelete = () => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      content: '确定删除soucemap？',\n      onOk: async () => {\n        await deleteSourcemap({ ids: selectedFiles, projectId: +id })\n        message.success('删除成功')\n        await fetchSourceMap()\n      },\n    })\n  }\n\n  return (\n    <Card\n      extra={\n        <>\n          {selectedFiles.length > 0 && (\n            <span onClick={onDelete}>\n              <Text className={styles.delete} type=\"danger\">\n                删除\n              </Text>\n            </span>\n          )}\n          <UploadSourcemap\n            onConfirm={onConfirmUpload}\n            trigger={<span className={styles.editable}>上传Source Map</span>}\n          />\n        </>\n      }\n      className={styles.card}\n      bordered={false}\n      title=\"sourceMap\"\n    >\n      <Input onKeyDown={onSearchSourceMap} className={styles.searchInput} placeholder=\"根据文件名搜索\" />\n      {\n        <Table\n          rowSelection={{\n            type: 'checkbox',\n            onChange: (selectedRowKeys: number[]) => {\n              setSelectedFiles(selectedRowKeys)\n            },\n          }}\n          pagination={false}\n          rowKey=\"id\"\n          columns={sourceMapColumn}\n          dataSource={sourcemap}\n        />\n      }\n    </Card>\n  )\n}\n\nexport default Sourcemap\n","import React, { useState } from 'react'\nimport { Form, Input, message, Modal, Select } from 'antd'\nimport { platformMap } from '@/common/constant'\nimport { putProjectInfoFetch } from '../../../../services'\nconst { Option } = Select\n\ninterface BasicEditorProps {\n  projectName: string\n  platform: number\n  git: string\n  projectId: number\n  fetchTable: () => void\n  trigger?: React.ReactNode\n  onConfirm?: (source: UtilObject) => any\n}\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n}\n\nconst platformArr = Object.entries(platformMap).map(([value, label]) => ({\n  value: Number(value),\n  label,\n}))\n\nconst BasicEditor = (props: BasicEditorProps) => {\n  const [visible, setVisible] = useState(false)\n\n  const [form] = Form.useForm()\n\n  const { projectName, platform, git, projectId, fetchTable } = props\n\n  const onClickVisible = () => setVisible(true)\n\n  const onHide = () => setVisible(false)\n\n  const onOk = async () => {\n    await form.validateFields()\n    const result = form.getFieldsValue()\n    const res = await putProjectInfoFetch(projectId, result)\n    message.success(res.message)\n    fetchTable()\n    onHide()\n  }\n\n  const defaultTrigger = <span onClick={onClickVisible}>修改</span>\n\n  const trigger = React.isValidElement(props.trigger)\n    ? React.cloneElement(props.trigger, {\n        ...props.trigger.props,\n        onClick: onClickVisible,\n      })\n    : defaultTrigger\n\n  return (\n    <>\n      {trigger}\n      <Modal onCancel={onHide} onOk={onOk} visible={visible} title=\"修改基本信息\" okText=\"确认\" cancelText=\"取消\">\n        <Form form={form} initialValues={{ projectName, platform, git }} {...layout} name=\"edit-basic\">\n          <Form.Item label=\"项目名称\" name=\"projectName\" rules={[{ required: true, message: '请输入项目名称' }]}>\n            <Input placeholder=\"请输入\" />\n          </Form.Item>\n          <Form.Item label=\"git地址\" name=\"git\" rules={[{ required: true, message: '请输入git地址' }]}>\n            <Input placeholder=\"请输入项目git地址\" />\n          </Form.Item>\n          <Form.Item label=\"平台\" name=\"platform\">\n            <Select style={{ width: 120 }}>\n              {platformArr.map(item => (\n                <Option key={item.value} value={item.value}>\n                  {item.label}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  )\n}\n\nBasicEditor.defaultProps = {\n  visible: false,\n  name: '',\n  platform: '',\n}\n\nexport default BasicEditor\n","import { ErrorLevelBadgeColor, ERRORTYPES } from '@/common/constant'\nimport { Badge, Button, Col, Divider, Form, Input, message, Modal, Radio, Row, Select, Space, Switch } from 'antd'\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\n\nimport styled from 'styled-components'\nimport { IErrorLevelConfig, ProjectErrorLevelConfigItem } from '@/d.ts/project'\n\nconst Option = Select.Option\nconst Item = Form.Item\nlet previousSelect = ''\n\nconst ColBorder = styled(Col)`\n  border-right: 1px solid rgba(0, 0, 0, 0.06);\n`\ninterface ErrorLevelConfigProps {\n  errorLevelConfig: IErrorLevelConfig\n  callback: (params: IErrorLevelConfig) => Promise<void>\n}\nfunction ErrorLevelConfig(props: ErrorLevelConfigProps, ref) {\n  const [visible, setVisible] = useState(false)\n  const [errorLevelArrState, setErrorLevelArrState] = useState<ProjectErrorLevelConfigItem[]>([])\n  const errorLevelArr = useRef<ProjectErrorLevelConfigItem[]>([])\n  const [form] = Form.useForm()\n  const { errorLevelConfig, callback } = props\n  const showModal = (data: boolean) => setVisible(data)\n\n  useEffect(() => {\n    if (Array.isArray(errorLevelConfig?.config) && errorLevelConfig.config.length > 0 && visible) {\n      errorLevelArr.current = errorLevelConfig.config\n      setErrorLevelArrState(errorLevelArr.current)\n      form.setFieldsValue({\n        errorType: errorLevelConfig.config[0].type,\n        levels: errorLevelConfig.config[0].data,\n        isEvent: errorLevelConfig.isEvent,\n      })\n      previousSelect = errorLevelConfig.config[0].type\n    }\n  }, [props.errorLevelConfig, visible])\n  const onOk = async () => {\n    try {\n      await form.validateFields()\n    } catch (error) {\n      message.warning('请检查错误等级数量间的大小！')\n      return\n    }\n    errorLevelArr.current.find(item => item.type === previousSelect).data = form\n      .getFieldsValue()\n      .levels.map(item => ({ ...item, value: Number(item.value) }))\n    await callback({\n      isEvent: form.getFieldValue('isEvent'),\n      config: errorLevelArr.current,\n    })\n    showModal(false)\n    // onCancel()\n  }\n  const handleSelectChange = async (errorType: ERRORTYPES) => {\n    try {\n      await form.validateFields()\n    } catch (error) {\n      form.setFieldsValue({\n        errorType: previousSelect,\n      })\n      return\n    }\n    errorLevelArr.current.find(item => item.type === previousSelect).data = form\n      .getFieldsValue()\n      .levels.map(item => ({ ...item, value: Number(item.value) }))\n    setErrorLevelArrState(JSON.parse(JSON.stringify(errorLevelArr.current)))\n    form.setFieldsValue({\n      levels: errorLevelArr.current.find(item => item.type === errorType).data,\n    })\n    previousSelect = errorType\n  }\n  useImperativeHandle(ref, () => {\n    return {\n      showModal,\n    }\n  })\n  const formItemLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 18 },\n  }\n  function onCancel() {\n    form.resetFields()\n    showModal(false)\n  }\n\n  return (\n    <Modal\n      onCancel={onCancel}\n      onOk={onOk}\n      width={1000}\n      visible={visible}\n      title=\"错误等级配置\"\n      okText=\"确认\"\n      cancelText=\"取消\"\n      maskClosable={false}\n    >\n      <Row>\n        <ColBorder span={12}>\n          <Form form={form} labelAlign=\"right\" {...formItemLayout}>\n            <Item label=\"错误类型\" name=\"errorType\">\n              <Select onChange={errorType => handleSelectChange(errorType as ERRORTYPES)}>\n                {Array.isArray(errorLevelArr.current) &&\n                  errorLevelArr.current.map(item => {\n                    return (\n                      <Option value={item.type} key={item.type}>\n                        {item.type}\n                      </Option>\n                    )\n                  })}\n              </Select>\n            </Item>\n            <Form.List name=\"levels\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map((field, index) => {\n                    return (\n                      <div key={field.key}>\n                        <Item\n                          name={[field.fieldKey, 'value']}\n                          rules={[\n                            { required: true, message: '请输入错误等级对应数量' },\n                            ({ getFieldValue }) => {\n                              return {\n                                validator(_, value) {\n                                  if (index === 0) {\n                                    return Promise.resolve()\n                                  }\n                                  // const curValue = getFieldValue('levels').find(item => item.level === index + 1)\n                                  const preValue = getFieldValue('levels')[index - 1].value\n                                  if (value && Number(value) > Number(preValue)) {\n                                    return Promise.reject('当前等级数量需要比上一级小')\n                                  }\n                                  return Promise.resolve()\n                                },\n                              }\n                            },\n                          ]}\n                          key={field.key}\n                          label={`P${index + 1}`}\n                        >\n                          {/* todo 需要换成整数 */}\n                          <Input type=\"number\" />\n                        </Item>\n                        {/* {index === fields.length - 1 && <MinusCircleOutlined onClick={() => remove(field.name)} />} */}\n                      </div>\n                    )\n                  })}\n                  {/* <Form.Item>\n                    <Button type=\"dashed\" onClick={() => add(1)} block icon={<PlusOutlined />}>\n                      添加错误等级\n                    </Button>\n                  </Form.Item> */}\n                </>\n              )}\n            </Form.List>\n            <Item valuePropName=\"checked\" label=\"等级划分\" name=\"isEvent\">\n              <Switch checkedChildren=\"事件数\" unCheckedChildren=\"用户数\" />\n            </Item>\n          </Form>\n        </ColBorder>\n        {/* <Divider type=\"vertical\" /> */}\n        <Col span={12}>\n          <ShowErrorLevelConfig errorLevelArr={errorLevelArrState}></ShowErrorLevelConfig>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\ntype PropsType = {\n  errorLevelArr: ProjectErrorLevelConfigItem[]\n}\nfunction ShowErrorLevelConfig(props: PropsType) {\n  return (\n    <div>\n      {props.errorLevelArr.map(item => {\n        return (\n          <Row key={item.type} gutter={[10, 10]}>\n            <Col span={8} style={{ textAlign: 'right' }}>\n              {item.type}\n            </Col>\n            {item.data.map(level => (\n              <Col key={level.level}>\n                <Badge status=\"processing\" color={ErrorLevelBadgeColor[level.level] || 'gray'} />P{level.level}:\n                {level.value}\n              </Col>\n            ))}\n          </Row>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default forwardRef(ErrorLevelConfig)\n","import CardWrapper from '@/components/CardWrapper'\nimport { IErrorLevelConfig, NProjectInfo, NProjectPutErrorLevelConfig } from '@/d.ts/project'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { getProjectInfoByIdFetch, putProjectErrorLevelConfigFetch } from '../../../../services'\nimport BasicEditor from './BasicEditor'\nimport { EditOutlined } from '@ant-design/icons'\nimport { formatTime } from '@/utils'\nimport { Button, Col, message, Row, Typography } from 'antd'\nimport { vueSdkCode } from '../../../Create/views/code'\nimport { platformMap } from '@/common/constant'\nimport { types } from '../../../../store'\nimport ErrorLevelConfig from './ErrorLevelConfig'\nconst { Text, Link, Paragraph } = Typography\n\nconst SpanWrap = styled.span`\n  color: #1890ff;\n  margin-left: 8px;\n  cursor: pointer;\n`\nconst configData = {\n  VUE_ERROR: {\n    3: 1,\n    2: 500,\n    1: 2000,\n  },\n  REACT_ERROR: {\n    3: 1,\n    2: 40,\n    1: 400,\n  },\n  JAVASCRIPT_ERROR: {\n    3: 1,\n    2: 600,\n    1: 1500,\n  },\n  RESOURCE_ERROR: {\n    4: 1,\n    3: 500,\n    2: 1000,\n    1: 3000,\n  },\n  HTTP_ERROR: {\n    4: 1,\n    3: 200,\n    2: 500,\n    1: 3000,\n  },\n  LOG_ERROR: {\n    4: 1,\n    3: 100,\n    2: 600,\n    1: 800,\n  },\n\n  PROMISE_ERROR: {\n    4: 1,\n    3: 500,\n    2: 1000,\n    1: 1600,\n  },\n  ROUTE_ERROR: {\n    4: 1,\n    3: 500,\n    2: 1000,\n    1: 1600,\n  },\n}\nexport default function ProjectBaseInfo({\n  detail,\n  fetchProjectInfo,\n}: {\n  detail: NProjectInfo.Response\n  fetchProjectInfo: () => void\n}) {\n  const errorLevelConfigModalRef = useRef(null)\n  const errorLevelConfigCallback = async (params: IErrorLevelConfig) => {\n    const res = await putProjectErrorLevelConfigFetch(detail.projectId, params)\n    message.success(res.message)\n    fetchProjectInfo()\n  }\n  return (\n    <CardWrapper\n      title={\n        <>\n          <span>基本信息</span>\n          <BasicEditor\n            trigger={\n              <SpanWrap>\n                <EditOutlined />\n              </SpanWrap>\n            }\n            git={detail.git}\n            projectId={detail.projectId}\n            platform={detail.platform}\n            projectName={detail.name}\n            fetchTable={fetchProjectInfo}\n          />\n        </>\n      }\n    >\n      <Row gutter={[0, 8]}>\n        <Col span={8}>\n          项目名称：\n          <a href={detail.git} target=\"_blank\" rel=\"noreferrer\">\n            {detail.name}\n          </a>\n        </Col>\n        <Col span={8}>语言：{platformMap[detail.platform]}</Col>\n        <Col span={8}>成员个数：{detail.memberCount}</Col>\n        <Col span={8}>创建时间：{formatTime(detail.createdAt)}</Col>\n        <Col span={8}>更新时间：{formatTime(detail.updatedAt)}</Col>\n        <Col span={8}>\n          错误等级配置：\n          <Button type=\"link\" onClick={() => errorLevelConfigModalRef.current.showModal(true)}>\n            点击配置\n          </Button>\n          <ErrorLevelConfig\n            ref={errorLevelConfigModalRef}\n            callback={errorLevelConfigCallback}\n            errorLevelConfig={detail.errorLevelConfig}\n          ></ErrorLevelConfig>\n        </Col>\n        <Col span={24}>\n          <div style={{ display: 'flex' }}>\n            <span>script:</span>\n            <Paragraph code copyable>\n              {vueSdkCode(detail.apikey)}\n            </Paragraph>\n          </div>\n        </Col>\n      </Row>\n    </CardWrapper>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux'\nimport { Card, Col, Input, Layout, message, Modal, Row, Switch, Table, Typography, Tabs, Button } from 'antd'\nimport { types } from '../../store/index'\nimport { getProjectInfoByIdFetch, createSourcemap, getSourcemap, deleteSourcemap } from '../../services'\nimport { NProjectInfo } from '@/d.ts/project'\nimport ProjectMembers from './components/ProjectMembers'\nimport Sourcemap from './components/Sourcemap'\nimport ProjectBaseInfo from './components/ProjectBaseInfo/ProjectBaseInfo'\n\nconst ProjectDetail = () => {\n  const params = useParams<{ id: string }>()\n  const { id } = params\n  const [detail, setDetail] = useState<NProjectInfo.Response | any>({})\n\n  const dispatch = useDispatch()\n\n  const fetchProjectInfo = async () => {\n    const res = await getProjectInfoByIdFetch(Number(id))\n    setDetail(res)\n  }\n  useEffect(() => {\n    fetchProjectInfo()\n  }, [])\n\n  useEffect(() => {\n    dispatch({ type: types.ASYNC_GET_PROJECT_DETAIL, payload: { projectId: params.id } })\n  }, [])\n  return (\n    <>\n      <Row gutter={[20, 20]}>\n        <Col span={24}>\n          <ProjectBaseInfo detail={detail} fetchProjectInfo={fetchProjectInfo}></ProjectBaseInfo>\n        </Col>\n      </Row>\n      <Row gutter={[20, 20]}>\n        <Col span={24}>\n          <ProjectMembers detail={detail}></ProjectMembers>\n        </Col>\n      </Row>\n      <Row gutter={[20, 20]}>\n        <Col span={24}>\n          <Sourcemap />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ProjectDetail\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail-layout\":\"detail-layout--3v0Lg0\",\"detailLayout\":\"detail-layout--3v0Lg0\",\"edit\":\"edit--2vomQk\",\"editable\":\"editable--3au294\",\"card\":\"card--DCqoPj\",\"column\":\"column--3U_iYu\",\"search-input\":\"search-input--3L-sTE\",\"searchInput\":\"search-input--3L-sTE\",\"delete\":\"delete--2Ib2bT\"};","import config from '@/config'\nimport { downloadFile } from '@/utils'\nconst rrWebMito = `<script src=\"https://static.@url.com/f2e/mito/mitoRRweb.min.js\" defer=\"defer\" crossorigin=\"anonymous\"></script>`\nexport function vueSdkCode(apikey: string) {\n  return `\n  // 将以下脚本放入header标签中\n  <script src=\"${config.sdkCdn}\" apikey=\"${apikey}\" customTag=\"\" crossorigin=\"anonymous\"></script>\n  ${rrWebMito}\n  `\n}\n\nexport function wxMiniSdkCode(apikey: string) {\n  const fileName = config.wxMitoSDK.split('/').pop()\n  downloadFile(config.wxMitoSDK, fileName)\n  return `//原生小程序\nimport * as MITO from './${fileName}';\n// 需要将文件的下载移到对应路径\n  MITO.init({\n  apikey: '${apikey}',\n  trackKey: '',\n  // 预定义的枚举值，去接入指南查看对应项目枚举值\n  appId: ''\n});\n\n// uni-app main.js\n// 需要将文件的下载移到对应路径\nimport * as MITO from './${fileName}';\nimport Vue from 'vue';\n\nMITO.init({\n  apikey: '${apikey}',\n  trackKey: '',\n  // 预定义的枚举值，去接入指南查看对应项目枚举值\n  appId: ''\n});\nVue.use(MITO.MitoVue);`\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card--2MWvio\",\"editable\":\"editable--Y5gl_6\"};"],"sourceRoot":""}