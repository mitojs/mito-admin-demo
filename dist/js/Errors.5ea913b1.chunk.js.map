{"version":3,"sources":["webpack:///./src/modules/Main/modules/Errors/Errors.tsx"],"names":["StatisicsWrap","styled","div","Errors","time","useSelector","state","global","currentProject","useState","errorSum","userSum","statisticsData","setStatisticsData","chartData","setChartData","tableData","setTableData","tableLoading","setTableLoading","mutipleParams","setMutipleParams","total","pageSize","current","pagination","setPagination","tableParams","setTableParams","query","useQuery","history","useHistory","dateParams","startDate","endDate","projectId","fetchTableData","params","getTable","slsQuery","pageNum","res","totalCount","list","runFetchTableData","useDebounceFn","wait","run","fetchStatisticsData","getStatisticsSum","fetchLineChartData","getProjectChart","useEffect","preParams","handleMultiSelectorChange","raw","preState","reduce","acc","node","inputValue","value","option","replace","search","qs","lineChartRender","useMemo","series","eventCount","forEach","item","push","count","name","data","loading","title","xAxisData","map","v","date","StatisticsNumRender","num","color","THEMECOLORS","red","blue","MultiSelectorRender","initial","Object","keys","key","label","dataParams","valueFetch","getProjectValues","labelFetch","getProjectLabels","onChange","gutter","className","flex","fetchData","paginationParam","filters","sorter","isDesc","length","order","undefined","orderField","field","status","join"],"mappings":"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","file":"js/Errors.5ea913b1.chunk.js","sourcesContent":["import React, { Component, useState, useRef, useEffect, useMemo } from 'react'\nimport useQuery from 'src/hooks/useQuery'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport * as qs from '@/utils/qs'\nimport * as styles from './index.module.less'\nimport { Button, Col, Row } from 'antd'\nimport StatisticsNum from '@components/StatisticsNum'\nimport { THEMECOLORS } from '@common/constant'\nimport LineChart from '@components/LineChart'\nimport ErrorsTable from '../components/ErrorsTable'\nimport MultiSelector from '@components/MultiSelector'\nimport { getProjectChart, getProjectLabels, getProjectValues, getStatisticsSum, getTable } from './services'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '@/store/index.type'\nimport CardWrapper from '@/components/CardWrapper'\nimport styled from 'styled-components'\nimport ErrorBoundary from '@/entry/ErrorBoundary'\nimport { useDebounceFn } from 'ahooks'\n\ninterface AntDPage {\n  pageSize: number\n  current: number\n  total: number\n}\nconst StatisicsWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 327px;\n`\nfunction Errors() {\n  const time = useSelector<RootState>(state => state.global.time)\n  const currentProject = useSelector<RootState, number>(state => state.global.currentProject)\n  const [statisticsData, setStatisticsData] = useState({\n    errorSum: 0,\n    userSum: 0,\n  })\n  const [chartData, setChartData] = useState(null)\n  const [tableData, setTableData] = useState<NErrorsTable.List[]>([])\n  const [tableLoading, setTableLoading] = useState(false)\n  const [mutipleParams, setMutipleParams] = useState('')\n  const [pagination, setPagination] = useState<AntDPage>({ total: 0, pageSize: 10, current: 1 })\n  const [tableParams, setTableParams] = useState<any>({})\n  const { query } = useQuery()\n  const history = useHistory()\n  const dateParams = {\n    startDate: time[0],\n    endDate: time[1],\n    projectId: currentProject,\n  }\n  const fetchTableData = async (params = {}, hasLoading = true) => {\n    hasLoading && setTableLoading(true)\n    try {\n      const res = await getTable({\n        ...dateParams,\n        slsQuery: mutipleParams,\n        pageSize: pagination.pageSize,\n        pageNum: pagination.current,\n        ...tableParams,\n        ...params,\n      })\n      setPagination({\n        total: res.totalCount,\n        pageSize: res.pageSize,\n        current: res.pageNum,\n      })\n      setTableData(res.list)\n    } finally {\n      setTableLoading(false)\n    }\n  }\n  const { run: runFetchTableData } = useDebounceFn(fetchTableData, { wait: 300 })\n\n  const fetchStatisticsData = async () => {\n    const res = await getStatisticsSum({\n      ...dateParams,\n    })\n    setStatisticsData(res)\n  }\n  const fetchLineChartData = async () => {\n    const res = await getProjectChart({\n      ...dateParams,\n    })\n    setChartData(res)\n  }\n  useEffect(() => {\n    runFetchTableData()\n  }, [tableParams])\n\n  useEffect(() => {\n    if (currentProject !== -1) {\n      fetchStatisticsData()\n      fetchLineChartData()\n      setTableParams(preParams => ({\n        ...preParams,\n        pageNum: 1,\n      }))\n    }\n  }, [time, currentProject])\n\n  useEffect(() => {\n    setTableParams(preParams => ({\n      ...preParams,\n      pageNum: 1,\n    }))\n  }, [mutipleParams])\n  const handleMultiSelectorChange = (slsQuery, raw) => {\n    setMutipleParams(preState => {\n      if (preState === slsQuery) return preState\n      if (raw) {\n        const res = raw.reduce((acc, node) => {\n          const inputValue = node.value.value\n          acc[node.option.value] = inputValue.replace(':', '\\\\:')\n          return acc\n        }, {})\n        history.replace({\n          search: qs.stringify(res),\n        })\n      }\n      return slsQuery\n    })\n  }\n  const lineChartRender = useMemo(() => {\n    const series = []\n    const eventCount = []\n    const userSum = []\n    chartData?.forEach(item => {\n      eventCount.push(item.count)\n      userSum.push(item.userSum)\n    })\n    series.push({\n      name: '事件数',\n      data: eventCount,\n    })\n    series.push({\n      name: '用户数',\n      data: userSum,\n    })\n    return (\n      <CardWrapper loading={!chartData} title=\"事件曲线图\">\n        <LineChart series={series} xAxisData={chartData?.map(v => v.date) || []}></LineChart>\n      </CardWrapper>\n    )\n  }, [chartData])\n  const StatisticsNumRender = useMemo(\n    () => (\n      <StatisicsWrap>\n        <CardWrapper title=\"错误数\">\n          <StatisticsNum num={statisticsData.errorSum} color={THEMECOLORS.red}></StatisticsNum>\n        </CardWrapper>\n        <CardWrapper title=\"用户数\">\n          <StatisticsNum num={statisticsData.userSum} color={THEMECOLORS.blue}></StatisticsNum>\n        </CardWrapper>\n      </StatisicsWrap>\n    ),\n    [statisticsData],\n  )\n  const onChangeTable = (paginationParam, filters, sorter) => {\n    const isDesc = Object.keys(sorter).length > 0 ? (sorter.order === 'ascend' ? 1 : 0) : undefined,\n      orderField = sorter.field,\n      pageSize = paginationParam.pageSize,\n      status = filters.status ? filters.status.join(',') : ''\n    const isSorter = tableParams.isDesc !== isDesc || tableParams.orderField !== orderField\n    const pageNum = isSorter ? 1 : paginationParam.current\n    setTableParams({\n      isDesc,\n      orderField,\n      pageNum,\n      pageSize,\n      status,\n    })\n  }\n\n  const MultiSelectorRender = useMemo(\n    () => (\n      <MultiSelector\n        initial={Object.keys(query).reduce((acc, key) => {\n          acc.push({ option: { label: key, value: key }, value: { label: query[key], value: query[key] } })\n          return acc\n        }, [])}\n        dataParams={dateParams}\n        valueFetch={getProjectValues}\n        labelFetch={getProjectLabels}\n        onChange={handleMultiSelectorChange}\n      />\n    ),\n    [query],\n  )\n  return (\n    <div>\n      <Row gutter={[20, 20]} className=\"no-wrap-row\">\n        <Col flex=\"162px\">{StatisticsNumRender}</Col>\n        <Col flex=\"auto\">{lineChartRender}</Col>\n      </Row>\n      <CardWrapper title=\"错误列表\">\n        {MultiSelectorRender}\n        <ErrorsTable\n          fetchData={runFetchTableData}\n          onChange={onChangeTable}\n          loading={tableLoading}\n          tableData={tableData}\n          pagination={pagination}\n        ></ErrorsTable>\n      </CardWrapper>\n    </div>\n  )\n}\n\nexport default Errors\n"],"sourceRoot":""}