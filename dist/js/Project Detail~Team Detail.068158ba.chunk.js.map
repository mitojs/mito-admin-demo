{"version":3,"sources":["webpack:///./src/modules/Main/modules/components/RoleAssign.tsx"],"names":["Option","ModalRoleAssign","props","ref","fetchData","putRoleFetch","meRole","isTeam","curUserInfo","params","title","options","TeamRoleOptions","ProjectRoleOptions","formRef","useRef","useState","visible","setVisible","onOk","current","submit","handleForm","values","res","success","message","useEffect","setFieldsValue","role","showModal","data","useImperativeHandle","onCancel","okText","cancelText","onFinish","labelAlign","labelCol","span","wrapperCol","Item","label","userName","name","hasFeedback","rules","required","placeholder","map","item","disabled","Number","value","key","forwardRef"],"mappings":"6zEAGQA,E,IAAAA,OASR,SAASC,EAAgBC,EAAeC,GAAK,IACnCC,EAAiEF,EAAjEE,UAAWC,EAAsDH,EAAtDG,aAAcC,EAAwCJ,EAAxCI,OAAQC,EAAgCL,EAAhCK,OAAQC,EAAwBN,EAAxBM,YAAaC,EAAWP,EAAXO,OACxDC,EAAQH,EAAS,WAAa,WAC9BI,EAAUJ,EAASK,IAAkBC,IACrCC,EAAUC,iBAAO,MAJoB,IAKbC,oBAAS,GALI,GAKpCC,EALoC,KAK3BC,EAL2B,KAMrCC,EAAI,4CAAG,6FACXL,EAAQM,QAAQC,SADL,2CAAH,qDAGJC,EAAU,4CAAG,WAAMC,GAAN,sGACClB,EAAa,EAAD,KACzBI,GACAc,IAHY,OACXC,EADW,OAKjB,IAAQC,QAAQD,EAAIE,SACpBR,GAAW,GACXd,IAPiB,2CAAH,sDAShBuB,qBAAU,WACRb,EAAQM,SAAWN,EAAQM,QAAQQ,eAAe,CAAEC,KAAMrB,EAAYqB,SACrE,CAACrB,EAAYqB,OAChB,IAAMC,EAAY,SAACC,GAAD,OAAmBb,EAAWa,IAChDC,8BAAoB7B,GAAK,WACvB,MAAO,CACL2B,gBAOJ,OACE,uBACEG,SAAU,WACRH,GAAU,IAGZX,KAAMA,EACNF,QAASA,EACTP,MAAOA,EACPwB,OAAO,KACPC,WAAW,MAEX,yBAAMhC,IAAKW,EAASsB,SAAUd,EAAYe,WAAW,QAhBlC,CACrBC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAehB,sBAAME,KAAN,CAAWC,MAAM,QACf,8BAAOlC,EAAYmC,WAErB,sBAAMF,KAAN,CAAWC,MAAM,KAAKE,KAAK,OAAOC,aAAW,EAACC,MAAO,CAAC,CAAEC,UAAU,EAAMrB,QAAS,WAC/E,uBAAQsB,YAAY,SACjBrC,EAAQsC,KAAI,SAAAC,GAAI,OACf,kBAAClD,EAAD,CACEmD,WAAU7C,GAAU8C,OAAOF,EAAKG,QAChCC,IAAKJ,EAAKG,MACVA,MAAOD,OAAOF,EAAKG,QAElBH,EAAKR,cAUPa,yBAAWtD","file":"js/Project Detail~Team Detail.068158ba.chunk.js","sourcesContent":["import { ProjectRoleOptions, TeamRoleOptions } from '@/common/constant'\nimport { Form, Input, message, Modal, Select } from 'antd'\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react'\nconst { Option } = Select\ninterface TProps {\n  meRole: number\n  fetchData: Function\n  curUserInfo: ATeamUserList.TTeamUserListItem | any\n  putRoleFetch: Function\n  params: any\n  isTeam: boolean\n}\nfunction ModalRoleAssign(props: TProps, ref) {\n  const { fetchData, putRoleFetch, meRole, isTeam, curUserInfo, params } = props\n  const title = isTeam ? '团队成员角色编辑' : '项目成员角色编辑'\n  const options = isTeam ? TeamRoleOptions : ProjectRoleOptions\n  const formRef = useRef(null)\n  const [visible, setVisible] = useState(false)\n  const onOk = async () => {\n    formRef.current.submit()\n  }\n  const handleForm = async values => {\n    const res = await putRoleFetch({\n      ...params,\n      ...values,\n    })\n    message.success(res.message)\n    setVisible(false)\n    fetchData()\n  }\n  useEffect(() => {\n    formRef.current && formRef.current.setFieldsValue({ role: curUserInfo.role })\n  }, [curUserInfo.role])\n  const showModal = (data: boolean) => setVisible(data)\n  useImperativeHandle(ref, () => {\n    return {\n      showModal,\n    }\n  })\n  const formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 },\n  }\n  return (\n    <Modal\n      onCancel={() => {\n        showModal(false)\n        // formRef.current.resetFields()\n      }}\n      onOk={onOk}\n      visible={visible}\n      title={title}\n      okText=\"确认\"\n      cancelText=\"取消\"\n    >\n      <Form ref={formRef} onFinish={handleForm} labelAlign=\"left\" {...formItemLayout}>\n        <Form.Item label=\"当前成员\">\n          <span>{curUserInfo.userName}</span>\n        </Form.Item>\n        <Form.Item label=\"角色\" name=\"role\" hasFeedback rules={[{ required: true, message: '请选择角色' }]}>\n          <Select placeholder=\"请选择角色\">\n            {options.map(item => (\n              <Option\n                disabled={meRole <= Number(item.value) ? false : true}\n                key={item.value}\n                value={Number(item.value)}\n              >\n                {item.label}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default forwardRef(ModalRoleAssign)\n"],"sourceRoot":""}