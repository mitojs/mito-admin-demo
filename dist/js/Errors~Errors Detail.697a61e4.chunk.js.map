{"version":3,"sources":["webpack:///./src/components/LineChart/index.tsx","webpack:///./src/components/StatisticsNum/index.module.less","webpack:///./src/components/StatisticsNum/index.tsx","webpack:///./src/hooks/useCount/index.tsx"],"names":["LineChart","props","options","series","chart","type","height","tools","download","zoom","enabled","dataLabels","markers","size","hover","sizeOffset","legend","tooltipHoverFormatter","val","opts","w","globals","seriesIndex","dataPointIndex","onItemHover","highlightDataSeries","horizontalAlign","position","stroke","width","dashArray","labels","xAxisData","yaxis","opposite","align","dom","useRef","useEffect","ApexCharts","current","render","destroy","ref","module","exports","StatisticsNum","num","useCount","className","styles","style","color","icon","config","start","duration","delay","useCountUp","end","countUp","update"],"mappings":"6FAAA,gFAUe,SAASA,EAAUC,GAChC,IAAMC,EAAU,CACdC,OAAQF,EAAME,OACdC,MAAO,CACLC,KAAM,OACNC,OAAQ,IACRC,MAAO,CACLC,UAAU,GAEZC,KAAM,CACJC,SAAS,IAGbC,WAAY,CACVD,SAAS,GAEXE,QAAS,CACPC,KAAM,EACNC,MAAO,CACLC,WAAY,IAGhBC,OAAQ,CACNC,sBAAuB,SAAUC,EAAKC,GACpC,OAAOD,EAAM,MAAQC,EAAKC,EAAEC,QAAQlB,OAAOgB,EAAKG,aAAaH,EAAKI,iBAEpEC,YAAa,CACXC,qBAAqB,GAEvBC,gBAAiB,OACjBC,SAAU,OAEZC,OAAQ,CACNC,MAAO,CAAC,IAAK,KACbC,UAAW,CAAC,EAAG,KAQjBC,OAAQ9B,EAAM+B,UACdC,MAAO,CACLC,UAAU,EACVH,OAAQ,CACNI,MAAO,UAKPC,EAAMC,iBAAO,MAQnB,OAPAC,qBAAU,WACR,IAAMlC,EAAQ,IAAImC,IAAWH,EAAII,QAAStC,GAE1C,OADAE,EAAMqC,SACC,WACLrC,EAAMsC,aAEP,CAACzC,IACG,yBAAK0C,IAAKP,M,qBCpEnBQ,EAAOC,QAAU,CAAC,WAAa,qBAAqB,QAAU,kBAAkB,MAAQ,gBAAgB,OAAS,mB,kCCDjH,+FAce,SAASC,EAAc7C,GACpC,IAAM8C,EAAMC,YAAS/C,EAAM8C,KAC3B,OACE,yBAAKE,UAAWC,cACd,yBAAKC,MAAO,CAAEC,MAAOnD,EAAMmD,OAASH,UAAU,QAC5C,kBAAC,IAAD,CAAMI,KAAK,oBAAoBxC,KAAM,MAEvC,yBAAKoC,UAAWC,WACd,yBAAKC,MAAO,CAAEC,MAAOnD,EAAMmD,OAASH,UAAWC,UAC5CH,O,sbCrBX,IAAMO,EAAS,CACbC,MAAO,EACPC,SAAU,EACVC,MAAO,GAEM,SAAST,EAASD,GAAa,MAChBW,qB,+VAAW,CAAD,CAAGC,IAAKZ,GAAQO,IAA9CM,EADoC,EACpCA,QAASC,EAD2B,EAC3BA,OAIjB,OAHAvB,qBAAU,WACRuB,EAAOd,KACN,CAACA,IACGa","file":"js/Errors~Errors Detail.697a61e4.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport ApexCharts from 'apexcharts'\n\ntype propsType = {\n  xAxisData: any[]\n  series: {\n    name: string\n    data: any[]\n  }[]\n}\nexport default function LineChart(props: propsType) {\n  const options = {\n    series: props.series,\n    chart: {\n      type: 'line',\n      height: 240,\n      tools: {\n        download: false,\n      },\n      zoom: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    markers: {\n      size: 0,\n      hover: {\n        sizeOffset: 6,\n      },\n    },\n    legend: {\n      tooltipHoverFormatter: function (val, opts) {\n        return val + ' : ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\n      },\n      onItemHover: {\n        highlightDataSeries: true,\n      },\n      horizontalAlign: 'left',\n      position: 'top',\n    },\n    stroke: {\n      width: [3.5, 2.5],\n      dashArray: [0, 10],\n      // colors: ['rgba(0, 133, 250,0.5)', ''],\n      // opacity: 0.5,\n      // curve: 'straight',\n    },\n    // title: {\n    //     align: 'left',\n    // },\n    labels: props.xAxisData,\n    yaxis: {\n      opposite: false,\n      labels: {\n        align: 'left',\n      },\n    },\n  }\n\n  const dom = useRef(null)\n  useEffect(() => {\n    const chart = new ApexCharts(dom.current, options)\n    chart.render()\n    return () => {\n      chart.destroy()\n    }\n  }, [props])\n  return <div ref={dom}></div>\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics--2LvKcZ\",\"content\":\"content--upGP0N\",\"title\":\"title--3jigTX\",\"number\":\"number--2gjozP\"};","import React, { useEffect, useState } from 'react'\nimport * as styles from './index.module.less'\nimport { THEMECOLORS, ICONTYPE } from '@/common/constant'\nimport Icon from '../Icon'\nimport useCount from '../../hooks/useCount'\n\ntype propsType = {\n  num: number\n  /**\n   * 全局枚举的颜色\n   */\n  color: THEMECOLORS\n}\n\nexport default function StatisticsNum(props: propsType) {\n  const num = useCount(props.num)\n  return (\n    <div className={styles.statistics}>\n      <div style={{ color: props.color }} className=\"icon\">\n        <Icon icon=\"statistics-square\" size={30}></Icon>\n      </div>\n      <div className={styles.content}>\n        <div style={{ color: props.color }} className={styles.number}>\n          {num}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useCountUp } from 'react-countup'\nconst config = {\n  start: 0,\n  duration: 1,\n  delay: 0,\n}\nexport default function useCount(num: number) {\n  const { countUp, update } = useCountUp({ end: num, ...config })\n  useEffect(() => {\n    update(num)\n  }, [num])\n  return countUp\n}\n"],"sourceRoot":""}