{"version":3,"sources":["webpack:///./src/components/TableWithHeader/index.module.less","webpack:///./src/components/TableWithHeader/index.tsx","webpack:///./src/modules/Main/modules/components/ErrorsTable/index.tsx","webpack:///./src/modules/Main/modules/components/ErrorsTable/index.module.less"],"names":["module","exports","TableWrap","styled","TableWithHeader","props","className","styles","children","bordered","FlexBlock","div","HeaderRight","ErrorStatusFilters","Object","entries","ErrorStatus","map","key","text","value","ErrorsTable","useState","selectedItem","setSelectedItem","selectedRowKeys","setSelectedRowKeys","solvingDisabled","setSolvingDisabled","collectDisabled","setCollectDisabled","ignoreDisabled","setIgnoreDisabled","rotation","setRotation","rotationTimer","useRef","clearSelected","handleCollect","items","isCollect","collectErrorsFetch","res","message","success","fetchData","columns","title","width","fixed","render","row","onClick","newTabErrorInfo","errorId","url","ClockCircleFilled","style","fontSize","color","THEMECOLORS","blue","marginRight","formatTime","createdAt","updatedAt","ossUrls","height","marginLeft","Icon","icon","flex","ProjectPlatform","platform","projectName","ErrorRemark","remark","justifyContent","ArchiveStar","status","size","projectId","ErrorAssign","dataIndex","type","filters","ErrorStatusBadgeStatus","sorter","level","ErrorLevelBadgeColor","ErrorLevel","useEffect","length","solvingBtndisabled","some","item","EnumErrorStatus","solved","solving","includes","collectBtndisabled","ignoreBtndisabled","ignored","rowSelection","onChange","selectedRows","console","log","onSelectAll","selected","changeRows","updateErrorSuccess","onClickRotation","current","setInterval","ErrorTableRotateTime","clearInterval","RotationBtn","PauseCircleOutlined","PlayCircleOutlined","pagination","showTotal","total","showSizeChanger","loading","scroll","x","rowKey","dataSource","tableData","disabled","successUpdated","v","ICONTYPE","irregular"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,gBAAkB,0BAA0B,gBAAkB,0BAA0B,OAAS,mB,msBCInH,IAAMC,EAAYC,YAAO,IAAPA,CAAH,KAOFC,EAAkB,SAAAC,GAC7B,OACE,yBAAKC,UAAWC,mBACd,yBAAKD,UAAWC,UAAgBF,EAAMG,UACtC,kBAACN,EAAD,GAAWO,UAAQ,GAAKJ,M,41ECmB9B,IAAMK,EAAYP,IAAOQ,IAAV,KAITC,EAAcT,IAAOQ,IAAV,KAMXE,EAAqBC,OAAOC,QAAQC,KAAaC,KAAI,yBAAEC,EAAF,WAAmB,CAC5EC,KADyD,KAEzDC,MAAOF,MAEM,SAASG,EAAYhB,GAAkB,QACZiB,mBAAqB,IADT,GAC7CC,EAD6C,KAC/BC,EAD+B,SAENF,mBAAS,IAFH,GAE7CG,EAF6C,KAE5BC,EAF4B,SAGNJ,oBAAS,GAHH,GAG7CK,EAH6C,KAG5BC,EAH4B,SAINN,oBAAS,GAJH,GAI7CO,EAJ6C,KAI5BC,EAJ4B,SAKRR,oBAAS,GALD,GAK7CS,EAL6C,KAK7BC,EAL6B,SAMpBV,oBAAS,GANW,GAM7CW,EAN6C,KAMnCC,EANmC,KAO9CC,EAAgBC,iBAAO,MAC7B,SAASC,IACPX,EAAmB,IACnBE,GAAmB,GACnBE,GAAmB,GACnBE,GAAkB,GAGpB,IAAMM,EAAa,4CAAG,0HAAOC,EAAP,+BAAgC,GAAIC,EAApC,gCACFC,YAAmB,CACnCF,QACAC,cAHkB,OACdE,EADc,OAKpBC,EAAA,EAAQC,QAAQF,EAAIC,SACpBtC,EAAMwC,YACNR,IAPoB,2CAAH,qDAUbS,EAAU,CACd,CACEC,MAAO,WACL,OACE,yBAAKzC,UAAWC,UACd,yBAAKD,UAAWC,SAAhB,UAINW,IAAK,SACL8B,MAAO,IACPC,MAAO,OACPC,OAAQ,SAACC,GAAD,OACN,yBAAK7C,UAAWC,WACd,yBAAKD,UAAWC,QAAc6C,QAAS,kBAAMC,YAAgBF,EAAIG,WAC/D,yBAAKhD,UAAWC,OAAa4C,EAAII,KACjC,yBAAKjD,UAAWC,WAAiB4C,EAAIR,SACrC,yBAAKrC,UAAWC,SACd,kBAACiD,EAAA,EAAD,CAAmBC,MAAO,CAAEC,SAAU,GAAIC,MAAOC,IAAYC,KAAMC,YAAa,KAChF,0BAAMxD,UAAWC,QACdwD,YAAWZ,EAAIa,WADlB,MACiCD,YAAWZ,EAAIc,YAE/B,OAAhBd,EAAIe,SACH,uBAASnB,MAAM,UACb,yBAAKU,MAAO,CAAEU,OAAQ,OAAQC,WAAY,QACxC,kBAACC,EAAA,EAAD,CAAMC,KAAK,eAMrB,2BACE,uBAAKC,KAAK,QACR,kBAAC7D,EAAD,KACE,kBAAC8D,EAAA,EAAD,CAAiBC,SAAUtB,EAAIsB,SAAUC,YAAavB,EAAIuB,cAC1D,kBAACC,EAAA,EAAD,CAAarB,QAASH,EAAIG,QAASsB,OAAQzB,EAAIyB,WAGnD,uBAAKL,KAAK,SACR,kBAAC7D,EAAD,CAAW+C,MAAO,CAAEoB,eAAgB,aAClC,uBAAS9B,MAAM,MACb,yBAAKU,MAAO,CAAEK,YAAa,SACzB,kBAACgB,EAAA,EAAD,CACEC,OAAQ5B,EAAIX,UACZwC,KAAM,GACN5B,QAAS,kBACPd,EAAc,CAAC,CAAEgB,QAASH,EAAIG,QAAS2B,UAAW9B,EAAI8B,aAAe9B,EAAIX,gBAMjF,kBAAC0C,EAAA,EAAD,CAAa/B,IAAKA,UAQ9B,CACEJ,MAAO,OACPoC,UAAW,OACXjE,IAAK,OACL8B,MAAO,IACPE,OAAQ,SAAAkC,GAAI,OAAI,8BAAOA,KAGzB,CACErC,MAAO,OACPoC,UAAW,SACXnC,MAAO,IACP9B,IAAK,SACLmE,QAASxE,EACTqC,OAAQ,SAAA6B,GAAM,OACZ,8BACE,uBAAOA,OAAQO,IAAuBP,KACrC/D,IAAY+D,MAInB,CACEhC,MAAO,KACPoC,UAAW,QACXnC,MAAO,IACPuC,QAAQ,EACRrE,IAAK,QACLgC,OAAQ,SAAAsC,GAAK,OACX,8BACE,uBAAO7B,MAAO8B,IAAqBD,GAAQT,OAAO,eACjDW,IAAWF,MAIlB,CACEzC,MAAO,MACPoC,UAAW,WACXnC,MAAO,IACP9B,IAAK,WACLqE,QAAQ,GAEV,CACExC,MAAO,MACPoC,UAAW,aACXnC,MAAO,IACP9B,IAAK,aACLqE,QAAQ,IAIZI,qBAAU,WACR,IAAMC,EAAiC,IAAxBrE,EAAaqE,OACtBC,IAAqBD,GAEvBrE,EAAauE,MAAK,SAAAC,GAAI,MAAI,CAACC,IAAgBC,OAAQD,IAAgBE,SAASC,SAASJ,EAAKhB,WACxFqB,IAAqBR,EACrBS,IAAoBT,GAEtBrE,EAAauE,MAAK,SAAAC,GAAI,MAAI,CAACC,IAAgBE,QAASF,IAAgBM,SAASH,SAASJ,EAAKhB,WAC/FnD,EAAmBiE,GACnB/D,EAAmBsE,GACnBpE,EAAkBqE,KACjB,CAAC9E,IAEJ,IAAMgF,EAAe,CACnB9E,kBACA+E,SAAU,SAAC/E,EAAiBgF,GAC1BC,QAAQC,IAAI,kBAAmBlF,GAC/BiF,QAAQC,IAAI,eAAgBF,GAC5B/E,EAAmBD,GACnBD,EAAgBiF,IAGlBG,YAAa,SAACC,EAAUJ,EAAcK,GACpCtF,EAAgBiF,KAIdM,EAAkB,4CAAG,6GACnB1G,EAAMwC,YADa,OAEzBR,IAFyB,2CAAH,qDAKlB2E,EAAkB,WACtB,IAAMjC,GAAU9C,EACZ8C,EACF5C,EAAc8E,QAAUC,aAAY,WAClCR,QAAQC,IAAI,eACZtG,EAAMwC,UAAU,IAAI,KACnBsE,MAEHT,QAAQC,IAAI,gBAAiBxE,EAAc8E,SAC3CG,cAAcjF,EAAc8E,UAE9B/E,EAAY6C,IAGRsC,GAAc,WAClB,OACE,uBAAQjE,QAAS4D,EAAiB1C,KAAMrC,EAAW,kBAACqF,EAAA,EAAD,MAA0B,kBAACC,EAAA,EAAD,OAC1EtF,EAAW,SAAW,WAK7B,OACE,kBAAC,EAAD,CACEuF,WAAU,OACLnH,EAAMmH,YADD,IAERC,UAAW,SAAAC,GAAK,kBAASA,EAAT,OAChBC,iBAAiB,IAEnBC,QAASvH,EAAMuH,QACfC,OAAQ,CAAEC,EAAG,KACbC,OAAO,UACPjF,QAASA,EACTyD,aAAcA,EACdyB,WAAY3H,EAAM4H,UAClBzB,SAAUnG,EAAMmG,UAEhB,kBAAC,IAAD,CACE0B,SAAUvG,EACVY,MAAOhB,EACP4G,eAAgBpB,IAGlB,uBACEmB,SAAUrG,EACVuB,QAAS,kBACPd,EACEf,EAAaN,KAAI,SAAAmH,GAAC,MAAK,CAAE9E,QAAS8E,EAAE9E,QAAS2B,UAAWmD,EAAEnD,eAC1D,IAGJX,KAAM,kBAACD,EAAA,EAAD,CAAMC,KAAK,WAAWc,KAAMiD,IAASC,UAAWtD,KAAM,KAC5DvB,MAAO,CAAEK,YAAa,KATxB,MAcA,kBAAC,IAAD,CACEoE,SAAUnG,EACVQ,MAAOhB,EACP4G,eAAgBpB,IAElB,kBAACnG,EAAD,KACE,kBAACyG,GAAD,U,qBCvRRrH,EAAOC,QAAU,CAAC,QAAU,kBAAkB,MAAQ,gBAAgB,IAAM,cAAc,QAAU,kBAAkB,MAAQ,gBAAgB,KAAO,eAAe,KAAO,eAAe,IAAM","file":"js/Errors~collect.597b4c14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableWithHeader\":\"TableWithHeader--3JLPog\",\"tableWithHeader\":\"TableWithHeader--3JLPog\",\"header\":\"header--1T63AP\"};","import React from 'react'\nimport { Table, Tag, Button, Tooltip } from 'antd'\nimport * as styles from './index.module.less'\nimport styled from 'styled-components'\n\nconst TableWrap = styled(Table)`\n  .ant-table-container {\n  }\n`\n/**\n * Table 会自己带有 Header, Children => Header Content\n */\nexport const TableWithHeader = props => {\n  return (\n    <div className={styles.TableWithHeader}>\n      <div className={styles.header}>{props.children}</div>\n      <TableWrap bordered {...props} />\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Table, Tag, Button, Tooltip, Badge, Select, Menu, Dropdown, message, Row, Col } from 'antd'\nimport * as styles from './index.module.less'\nimport Icon from '@components/Icon'\nimport {\n  THEMECOLORS,\n  ICONTYPE,\n  ErrorStatus,\n  ErrorLevel,\n  platformMap,\n  EnumErrorStatus,\n  ErrorLevelBadgeColor,\n  ErrorStatusBadgeStatus,\n  ErrorTableRotateTime,\n} from '@common/constant'\nimport { formatTime, newTabErrorInfo } from '@/utils'\nimport { ClockCircleFilled, PlayCircleOutlined, PauseCircleOutlined } from '@ant-design/icons'\nimport { ArchiveStar } from '@/components/ArchiveStar'\nimport { TableWithHeader } from '@/components/TableWithHeader'\nimport { collectErrorsFetch } from '../../Errors/services/index'\nimport styled from 'styled-components'\nimport ProjectPlatform from '../ProjectPlatform'\nimport ErrorAssign from '../ErrorAssign'\nimport { ErrorIgnoreBtn, ErrorSolvingBtn } from '../ErrorSolve'\nimport config from '@/config'\nimport ErrorRemark from '../ErrorRemark'\n\ntype TableRow = NErrorsTable.List\ntype propsType = {\n  tableData: TableRow[]\n  pagination: { total: number; pageSize: number; current: number }\n  loading: boolean\n  fetchData: Function\n  onChange: Function\n}\nconst FlexBlock = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst HeaderRight = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: flex-end;\n  padding: 0 10px;\n`\nconst ErrorStatusFilters = Object.entries(ErrorStatus).map(([key, value]) => ({\n  text: value,\n  value: key,\n}))\nexport default function ErrorsTable(props: propsType) {\n  const [selectedItem, setSelectedItem] = useState<TableRow[]>([])\n  const [selectedRowKeys, setSelectedRowKeys] = useState([])\n  const [solvingDisabled, setSolvingDisabled] = useState(true)\n  const [collectDisabled, setCollectDisabled] = useState(true)\n  const [ignoreDisabled, setIgnoreDisabled] = useState(true)\n  const [rotation, setRotation] = useState(true)\n  const rotationTimer = useRef(null)\n  function clearSelected() {\n    setSelectedRowKeys([])\n    setSolvingDisabled(true)\n    setCollectDisabled(true)\n    setIgnoreDisabled(true)\n  }\n\n  const handleCollect = async (items: NCollect.item[] = [], isCollect: boolean) => {\n    const res = await collectErrorsFetch({\n      items,\n      isCollect,\n    })\n    message.success(res.message)\n    props.fetchData()\n    clearSelected()\n  }\n\n  const columns = [\n    {\n      title: () => {\n        return (\n          <div className={styles.header}>\n            <div className={styles.title}>错误信息</div>\n          </div>\n        )\n      },\n      key: 'action',\n      width: 600,\n      fixed: 'left',\n      render: (row: TableRow) => (\n        <div className={styles.project}>\n          <div className={styles.error} onClick={() => newTabErrorInfo(row.errorId)}>\n            <div className={styles.url}>{row.url}</div>\n            <div className={styles.message}>{row.message}</div>\n            <div className={styles.timec}>\n              <ClockCircleFilled style={{ fontSize: 16, color: THEMECOLORS.blue, marginRight: 8 }} />\n              <span className={styles.time}>\n                {formatTime(row.createdAt)} ~ {formatTime(row.updatedAt)}\n              </span>\n              {row.ossUrls !== '[]' && (\n                <Tooltip title=\"存在录制回放\">\n                  <div style={{ height: '20px', marginLeft: '2px' }}>\n                    <Icon icon=\"record\"></Icon>\n                  </div>\n                </Tooltip>\n              )}\n            </div>\n          </div>\n          <Row>\n            <Col flex=\"auto\">\n              <FlexBlock>\n                <ProjectPlatform platform={row.platform} projectName={row.projectName}></ProjectPlatform>\n                <ErrorRemark errorId={row.errorId} remark={row.remark}></ErrorRemark>\n              </FlexBlock>\n            </Col>\n            <Col flex=\"200px\">\n              <FlexBlock style={{ justifyContent: 'flex-end' }}>\n                <Tooltip title=\"收藏\">\n                  <div style={{ marginRight: '10px' }}>\n                    <ArchiveStar\n                      status={row.isCollect}\n                      size={24}\n                      onClick={() =>\n                        handleCollect([{ errorId: row.errorId, projectId: row.projectId }], !row.isCollect)\n                      }\n                    />\n                  </div>\n                </Tooltip>\n\n                <ErrorAssign row={row}></ErrorAssign>\n              </FlexBlock>\n            </Col>\n          </Row>\n          {/* <div className={styles.info}></div> */}\n        </div>\n      ),\n    },\n    {\n      title: '错误类型',\n      dataIndex: 'type',\n      key: 'type',\n      width: 140,\n      render: type => <span>{type}</span>,\n    },\n\n    {\n      title: '错误状态',\n      dataIndex: 'status',\n      width: 120,\n      key: 'status',\n      filters: ErrorStatusFilters,\n      render: status => (\n        <span>\n          <Badge status={ErrorStatusBadgeStatus[status]} />\n          {ErrorStatus[status]}\n        </span>\n      ),\n    },\n    {\n      title: '等级',\n      dataIndex: 'level',\n      width: 120,\n      sorter: true,\n      key: 'level',\n      render: level => (\n        <span>\n          <Badge color={ErrorLevelBadgeColor[level]} status=\"processing\" />\n          {ErrorLevel[level]}\n        </span>\n      ),\n    },\n    {\n      title: '事件数',\n      dataIndex: 'eventSum',\n      width: 100,\n      key: 'eventSum',\n      sorter: true,\n    },\n    {\n      title: '用户数',\n      dataIndex: 'trackerSum',\n      width: 100,\n      key: 'trackerSum',\n      sorter: true,\n    },\n  ]\n\n  useEffect(() => {\n    const length = selectedItem.length === 0\n    const solvingBtndisabled = length\n      ? true\n      : selectedItem.some(item => [EnumErrorStatus.solved, EnumErrorStatus.solving].includes(item.status))\n    const collectBtndisabled = length ? true : false\n    const ignoreBtndisabled = length\n      ? true\n      : selectedItem.some(item => [EnumErrorStatus.solving, EnumErrorStatus.ignored].includes(item.status))\n    setSolvingDisabled(solvingBtndisabled)\n    setCollectDisabled(collectBtndisabled)\n    setIgnoreDisabled(ignoreBtndisabled)\n  }, [selectedItem])\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (selectedRowKeys, selectedRows: TableRow[]) => {\n      console.log('selectedRowKeys', selectedRowKeys)\n      console.log('selectedRows', selectedRows)\n      setSelectedRowKeys(selectedRowKeys)\n      setSelectedItem(selectedRows)\n    },\n    // onSelect: (record, selected, selectedRows: TableRow[]) => {},\n    onSelectAll: (selected, selectedRows, changeRows) => {\n      setSelectedItem(selectedRows)\n    },\n  }\n\n  const updateErrorSuccess = async () => {\n    await props.fetchData()\n    clearSelected()\n  }\n\n  const onClickRotation = () => {\n    const status = !rotation\n    if (status) {\n      rotationTimer.current = setInterval(() => {\n        console.log('setInterval')\n        props.fetchData({}, false)\n      }, ErrorTableRotateTime)\n    } else {\n      console.log('clearInterval', rotationTimer.current)\n      clearInterval(rotationTimer.current)\n    }\n    setRotation(status)\n  }\n\n  const RotationBtn = () => {\n    return (\n      <Button onClick={onClickRotation} icon={rotation ? <PauseCircleOutlined /> : <PlayCircleOutlined />}>\n        {rotation ? '暂停实时更新' : '启用实时更新'}\n      </Button>\n    )\n  }\n\n  return (\n    <TableWithHeader\n      pagination={{\n        ...props.pagination,\n        showTotal: total => `共 ${total} 条`,\n        showSizeChanger: true,\n      }}\n      loading={props.loading}\n      scroll={{ x: 1000 }}\n      rowKey=\"errorId\"\n      columns={columns}\n      rowSelection={rowSelection}\n      dataSource={props.tableData}\n      onChange={props.onChange}\n    >\n      <ErrorSolvingBtn\n        disabled={solvingDisabled}\n        items={selectedItem}\n        successUpdated={updateErrorSuccess}\n      ></ErrorSolvingBtn>\n\n      <Button\n        disabled={collectDisabled}\n        onClick={() =>\n          handleCollect(\n            selectedItem.map(v => ({ errorId: v.errorId, projectId: v.projectId })),\n            true,\n          )\n        }\n        icon={<Icon icon=\"fillstar\" type={ICONTYPE.irregular} size={15} />}\n        style={{ marginRight: 10 }}\n      >\n        收藏\n      </Button>\n\n      <ErrorIgnoreBtn\n        disabled={ignoreDisabled}\n        items={selectedItem}\n        successUpdated={updateErrorSuccess}\n      ></ErrorIgnoreBtn>\n      <HeaderRight>\n        <RotationBtn></RotationBtn>\n      </HeaderRight>\n    </TableWithHeader>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"project--1b5Rr4\",\"error\":\"error--m5b5EB\",\"url\":\"url--3p7wA_\",\"message\":\"message--hwq-0m\",\"timec\":\"timec--3yqISc\",\"time\":\"time--2Q90mL\",\"info\":\"info--2Hgdjr\",\"fav\":\"fav--32hz4H\"};"],"sourceRoot":""}